{"version":3,"sources":["utils/erc20.ts","hooks/useTokenBalance.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","useWallet","ethereum","res","fetchBalance","useTokenBalance","fastRefresh","pancakeRabbitsContract","getPancakeRabbitContract","initialState","isLoading","nfts","lastUpdated","Date","now","reducer","state","action","type","data","timestamp","useGetWalletNfts","useReducer","dispatch","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","tokenIds","fetchNfts","refresh","HeaderWrapper","styled","div","theme","colors","textSubtle","ComingSoon","children","TranslateString","useI18n","flexDirection","alignItems","justifyContent","p","width","height","as","size","color","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","bold","ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDS","isInitialized","currentStep","teamId","userName","minimumCakeRequired","MINT_COST","multipliedBy","pow","totalCost","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","Header","useContext","mb","map","WalletNotConnected","UnlockButton","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","useHasCakeBalance","minimumBalance","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","checked","e","target","style","flex","NextStepButton","endIcon","Button","UIKitButton","mediaQueries","md","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","py","onClick","undefined","useProfileCreation","nftList","filter","nft","includes","minimumCakeBalanceToMint","Mint","setBunnyId","useCake","useBunnyFactory","hasMinimumCakeRequired","response","currentAllowance","approve","toJSON","send","from","mintNFT","num","images","parseInt","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","to","marginLeft","walletNft","firstTokenId","getPancakeProfileAddress","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","id","isJoinable","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknoledged","web3","useWeb3","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","ok","json","bnbSign","signature","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","minHeight","htmlFor","display","cursor","marginBottom","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","claimRefundAddress","getClaimRefundAddress","useCanClaim","canClaim","setCanClaim","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","claimRefundAbi","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","abi","useContract","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","fullWidth","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","getFullDisplayBalance","PauseProfilePage","setIsAcknowledged","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/5.a87c73ee.chunk.js","sourcesContent":["import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useEffect, useReducer } from 'react'\r\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nconst pancakeRabbitsContract = getPancakeRabbitContract()\r\n\r\nexport type NftMap = {\r\n  [key: number]: {\r\n    tokenUri: string\r\n    tokenIds: number[]\r\n  }\r\n}\r\n\r\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\r\n\r\ntype State = {\r\n  isLoading: boolean\r\n  nfts: NftMap\r\n  lastUpdated: number\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoading: true,\r\n  nfts: {},\r\n  lastUpdated: Date.now(),\r\n}\r\n\r\nconst reducer = (state: State, action: Action) => {\r\n  switch (action.type) {\r\n    case 'set_nfts':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n        nfts: action.data,\r\n      }\r\n    case 'refresh':\r\n      return {\r\n        ...initialState,\r\n        lastUpdated: action.timestamp,\r\n      }\r\n    case 'reset':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useGetWalletNfts = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWallet()\r\n  const { lastUpdated } = state\r\n\r\n  useEffect(() => {\r\n    const fetchNfts = async () => {\r\n      try {\r\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\r\n\r\n        if (balanceOf > 0) {\r\n          let nfts: NftMap = {}\r\n\r\n          const getTokenIdAndBunnyId = async (index: number) => {\r\n            try {\r\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\r\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\r\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\r\n\r\n              return [Number(bunnyId), Number(tokenId), tokenUri]\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const tokenIdPromises = []\r\n\r\n          for (let i = 0; i < balanceOf; i++) {\r\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\r\n          }\r\n\r\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\r\n\r\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\r\n            if (!association) {\r\n              return accum\r\n            }\r\n\r\n            const [bunnyId, tokenId, tokenUri] = association\r\n\r\n            return {\r\n              ...accum,\r\n              [bunnyId]: {\r\n                tokenUri,\r\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\r\n              },\r\n            }\r\n          }, {})\r\n\r\n          dispatch({ type: 'set_nfts', data: nfts })\r\n        } else {\r\n          // Reset it in case of wallet change\r\n          dispatch({ type: 'reset' })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'reset' })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchNfts()\r\n    }\r\n  }, [account, lastUpdated, dispatch])\r\n\r\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\r\n\r\n  return { ...state, refresh }\r\n}\r\n\r\nexport default useGetWalletNfts\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\r\n        {children || TranslateString(999, 'Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import styled from 'styled-components'\r\nimport { Text } from 'lionuikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from 'lionuikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from 'lionuikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useToast } from 'state/hooks'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\r\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const TranslateString = useI18n()\r\n  const { account, ethereum } = useWallet()\r\n  const { toastError } = useToast()\r\n  const web3 = useWeb3()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      tokenId={tokenId}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const provider = ethereum as any\r\n      const signature = provider?.bnbSign\r\n        ? (await provider.bnbSign(account, userName))?.signature\r\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\r\n\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(`Created ${dateCreated} ago`)\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError('Error: Unable to verify username')\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${4}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(1110, 'Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(\r\n          999,\r\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\r\n        )}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(1110, 'Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(\r\n              840,\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={TranslateString(1094, 'Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {TranslateString(\r\n              1100,\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\r\n              </div>\r\n              <Text ml=\"8px\">\r\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\r\n              </Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {TranslateString(464, 'Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\r\n        {TranslateString(842, 'Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} LION is required`, { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","export const MINT_COST = 1\r\nexport const REGISTER_COST = 0.5\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_BUNNY_IDS = [5, 6, 7, 8, 9]\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST + REGISTER_COST\r\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  tokenId: null,\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\r\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_tokenid':\r\n      return {\r\n        ...state,\r\n        tokenId: action.tokenId,\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWallet()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = [\r\n  { translationId: 776, label: 'Get Starter Collectible' },\r\n  { translationId: 778, label: 'Set Profile Picture' },\r\n  { translationId: 780, label: 'Join Team' },\r\n  { translationId: 782, label: 'Set Name' },\r\n]\r\n\r\nconst Header: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\r\n        {TranslateString(770, 'Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\r\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(999, 'Total cost: 1.5 LION')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map(({ translationId, label }, index) => {\r\n          return (\r\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {TranslateString(translationId, label)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <Heading size=\"xl\" mb=\"8px\">\r\n        {TranslateString(852, 'Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {TranslateString(999, 'Please connect your wallet to continue')}\r\n      </Text>\r\n      <UnlockButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useToast } from 'state/hooks'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { account } = useWallet()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n          console.error('An error occurred approving transaction:', error)\r\n          toastError('An error occurred approving transaction')\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n          console.error('An error occurred confirming transaction:', error)\r\n          toastError('An error occurred confirming transaction')\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from 'lionuikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\r\n  border-radius: 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px 0 0 16px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from 'lionuikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, Flex, AutoRenewIcon, ChevronDownIcon } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Flex py=\"8px\" flexDirection={['column', null, 'row']} alignItems=\"center\">\r\n      <Button\r\n        disabled={isApproveDisabled}\r\n        onClick={onApprove}\r\n        endIcon={isApproving ? spinnerIcon : undefined}\r\n        isLoading={isApproving}\r\n      >\r\n        {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\r\n      </Button>\r\n      <ChevronRight />\r\n      <ChevronBottom />\r\n      <Button\r\n        onClick={onConfirm}\r\n        disabled={isConfirmDisabled}\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? spinnerIcon : undefined}\r\n      >\r\n        {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from 'lionuikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\r\n\r\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\r\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\r\n\r\nconst Mint: React.FC = () => {\r\n  const [bunnyId, setBunnyId] = useState(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWallet()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const TranslateString = useI18n()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      // TODO: Move this to a helper, this check will be probably be used many times\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return cakeContract.methods\r\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\r\n        .send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\r\n    },\r\n    onSuccess: () => actions.nextStep(),\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${1}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(776, 'Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(792, 'Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {TranslateString(999, `Cost: ${MINT_COST} LION`, { num: MINT_COST })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.bunnyId}\r\n                name=\"mintStarter\"\r\n                value={nft.bunnyId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={bunnyId === nft.bunnyId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {TranslateString(1098, `A minimum of ${MINT_COST} LION is required`)}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {TranslateString(798, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from 'lionuikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport nftList from 'config/constants/nfts'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useToast } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { tokenId, actions } = useContext(ProfileCreationContext)\r\n  const TranslateString = useI18n()\r\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const { account } = useWallet()\r\n  const { toastError } = useToast()\r\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  const handleApprove = () => {\r\n    pancakeRabbitsContract.methods\r\n      .approve(getPancakeProfileAddress(), tokenId)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsApproving(false)\r\n        setIsApproved(true)\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!isLoading && walletNfts.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(852, 'Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {TranslateString(\r\n            856,\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${2}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(778, 'Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(812, 'Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {TranslateString(\r\n              814,\r\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\r\n            )}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\r\n              {TranslateString(999, 'See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              walletNfts.map((walletNft) => {\r\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.bunnyId}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === tokenId}\r\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(818, 'Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {TranslateString(\r\n              820,\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n          >\r\n            {TranslateString(564, 'Approve')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\r\n        {TranslateString(798, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from 'lionuikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\ninterface Team {\r\n  name: string\r\n  description: string\r\n  isJoinable: boolean\r\n}\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const TranslateString = useI18n()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${3}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(826, 'Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(826, 'Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(\r\n              830,\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {TranslateString(798, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from 'lionuikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { useToast } from 'state/hooks'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\n\r\ninterface Props {\r\n  userName: string\r\n  tokenId: number\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  tokenId,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const profileContract = useProfile()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const dispatch = useDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return profileContract.methods\r\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\r\n        .send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      await dispatch(fetchProfile(account))\r\n      onDismiss()\r\n      toastSuccess('Profile created!')\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{TranslateString(999, 'Cost')}</Text>\r\n        <Text>{TranslateString(999, `${REGISTER_COST} LION`, { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import { useReducer } from 'react'\r\n\r\nexport enum Views {\r\n  START = 'start',\r\n  CHANGE = 'change',\r\n  REMOVE = 'remove',\r\n  APPROVE = 'approve',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'set_view'\r\n      view: Views\r\n    }\r\n  | {\r\n      type: 'go_previous'\r\n    }\r\n\r\nexport interface State {\r\n  currentView: Views\r\n  previousView: Views | null\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'set_view':\r\n      return {\r\n        ...state,\r\n        currentView: action.view,\r\n        previousView: state.currentView,\r\n      }\r\n    case 'go_previous':\r\n      return {\r\n        ...state,\r\n        currentView: state.previousView,\r\n        previousView: state.currentView,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport interface UseEditProfileResponse extends State {\r\n  goToStart: () => void\r\n  goToChange: () => void\r\n  goToApprove: () => void\r\n  goToRemove: () => void\r\n  goPrevious: () => void\r\n}\r\n\r\nconst useEditProfile = (): UseEditProfileResponse => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    currentView: Views.START,\r\n    previousView: null,\r\n  })\r\n\r\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\r\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\r\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\r\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\r\n  const goPrevious = () => dispatch({ type: 'go_previous' })\r\n\r\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\r\n}\r\n\r\nexport default useEditProfile\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from 'lionuikit'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport { getClaimRefundAddress } from 'utils/addressHelpers'\r\nimport { getContract } from 'utils/web3'\r\nimport { useToast } from 'state/hooks'\r\nimport useContract from 'hooks/useContract'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nconst claimRefundAddress = getClaimRefundAddress()\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWallet()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getContract(claimRefundAbi, claimRefundAddress)\r\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\r\n      setCanClaim(walletCanClaim)\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst useClaimRefundContract = () => {\r\n  const abi = (claimRefundAbi as unknown) as AbiItem\r\n  return useContract(abi, claimRefundAddress)\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n\r\n  const handleClick = () => {\r\n    claimRefundContract.methods\r\n      .getCakeBack()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess('Success!')\r\n        onSuccess()\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        setIsConfirming(false)\r\n        toastError('Error', error?.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {TranslateString(\r\n            999,\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 LION it cost to make your bunny.\")}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {TranslateString(\r\n            999,\r\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {TranslateString(\r\n            999,\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {TranslateString(999, 'Claim Your LION')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { useToast } from 'state/hooks'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: new BigNumber(0),\r\n    numberCakeToRegister: new BigNumber(0),\r\n    numberCakeToUpdate: new BigNumber(0),\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const profileContract = getProfileContract()\r\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\r\n          profileContract.methods.numberCakeToReactivate().call,\r\n          profileContract.methods.numberCakeToRegister().call,\r\n          profileContract.methods.numberCakeToUpdate().call,\r\n        ])\r\n\r\n        setCosts({\r\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\r\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\r\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\r\n        })\r\n      } catch (error) {\r\n        toastError('Error', 'Could not retrieve LION costs for profile')\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from 'lionuikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  height: 24px;\r\n  position: absolute;\r\n  right: 0px;\r\n  width: 24px;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n    height: 48px;\r\n    width: 48px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  height: 64px;\r\n  position: relative;\r\n  width: 64px;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n// TODO: replace with no provile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Flex, Text, InjectedModalProps } from 'lionuikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useProfile } from 'state/hooks'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { UseEditProfileResponse } from './reducer'\r\nimport ProfileAvatar from '../ProfileAvatar'\r\n\r\ninterface StartPageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n  goToRemove: UseEditProfileResponse['goToRemove']\r\n  goToApprove: UseEditProfileResponse['goToApprove']\r\n}\r\n\r\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary', fullWidth: true })`\r\n  border-color: ${({ theme }) => theme.colors.failure};\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  margin-bottom: 24px;\r\n\r\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\r\n    border-color: ${({ theme }) => theme.colors.failure};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\r\n  const [needsApproval, setNeedsApproval] = useState(null)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const cakeContract = useCake()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  /**\r\n   * Check if the wallet has the required LION allowance to change their profile pic or reactivate\r\n   * If they don't, we send them to the approval screen first\r\n   */\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\r\n      const currentAllowance = new BigNumber(response)\r\n      setNeedsApproval(currentAllowance.lt(cost))\r\n    }\r\n\r\n    if (account) {\r\n      checkApprovalStatus()\r\n    }\r\n  }, [account, cost, setNeedsApproval, cakeContract])\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n      <ProfileAvatar profile={profile} />\r\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\r\n        <Text as=\"p\" color=\"failure\">\r\n          {!hasMinimumCakeRequired &&\r\n            TranslateString(999, `${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\r\n        </Text>\r\n      </Flex>\r\n      {profile.isActive ? (\r\n        <>\r\n          <Button\r\n            fullWidth\r\n            mb=\"8px\"\r\n            onClick={needsApproval === true ? goToApprove : goToChange}\r\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n          >\r\n            {TranslateString(999, 'Change Profile Pic')}\r\n          </Button>\r\n          <DangerOutline onClick={goToRemove}>{TranslateString(999, 'Remove Profile Pic')}</DangerOutline>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          fullWidth\r\n          mb=\"8px\"\r\n          onClick={needsApproval === true ? goToApprove : goToChange}\r\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n        >\r\n          {TranslateString(999, 'Reactivate Profile')}\r\n        </Button>\r\n      )}\r\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const TranslateString = useI18n()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { account } = useWallet()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = () => {\r\n    pancakeProfileContract.methods\r\n      .pauseProfile()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', async () => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess('Profile Paused!')\r\n\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsConfirming(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(\r\n          999,\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} LION`)}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{TranslateString(999, 'I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        fullWidth\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {TranslateString(999, 'Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n","import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from 'lionuikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport nftList from 'config/constants/nfts'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\r\nimport SelectionCard from '../SelectionCard'\r\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [tokenId, setTokenId] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\r\n  const dispatch = useDispatch()\r\n  const { profile } = useProfile()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const profileContract = useProfileContract()\r\n  const { account } = useWallet()\r\n  const { toastSuccess } = useToast()\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onApprove: () => {\r\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      if (!profile.isActive) {\r\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\r\n      }\r\n\r\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      // Re-fetch profile\r\n      await dispatch(fetchProfile(account))\r\n      toastSuccess('Profile Updated!')\r\n\r\n      onDismiss()\r\n    },\r\n  })\r\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        walletNfts.map((walletNft) => {\r\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.bunnyId}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === tokenId}\r\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && walletNfts.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" fullWidth onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n","import React, { useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useCake } from 'hooks/useContract'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from '../../hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = () => {\r\n    cakeContract.methods\r\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        goToChange()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>\r\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\r\n        </Text>\r\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} LION`)}</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        fullWidth\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {TranslateString(999, 'Approve')}\r\n      </Button>\r\n      <Button variant=\"text\" fullWidth onClick={onDismiss} disabled={isApproving}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n","import React from 'react'\r\nimport { InjectedModalProps, Modal } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useEditProfile, { Views } from './reducer'\r\nimport StartView from './StartView'\r\nimport PauseProfileView from './PauseProfileView'\r\nimport ChangeProfilePicView from './ChangeProfilePicView'\r\nimport ApproveCakeView from './ApproveCakeView'\r\n\r\ntype EditProfileModalProps = InjectedModalProps\r\n\r\nconst viewTitle = {\r\n  [Views.START]: { id: 999, label: 'Edit Profile' },\r\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\r\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\r\n  [Views.APPROVE]: { id: 999, label: 'Approve LION' },\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\r\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\r\n  const TranslateString = useI18n()\r\n  const { id, label } = viewTitle[currentView]\r\n\r\n  const isStartView = currentView === Views.START\r\n  const handleBack = isStartView ? null : () => goPrevious()\r\n\r\n  return (\r\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\r\n      <div style={{ maxWidth: '400px' }}>\r\n        {currentView === Views.START && (\r\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\r\n        )}\r\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\r\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\r\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditProfileModal\r\n","import React from 'react'\r\nimport { Button, Flex, Heading, useModal, Won } from 'lionuikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\r\nimport HeaderWrapper from './HeaderWrapper'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst ProfileHeader = () => {\r\n  const TranslateString = useI18n()\r\n  const { canClaim, checkClaimStatus } = useCanClaim()\r\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n  const { hasProfile } = useProfile()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Flex\r\n        flexDirection={['column', null, 'row']}\r\n        alignItems={['start', null, 'center']}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n            {TranslateString(999, 'Your Profile')}\r\n          </Heading>\r\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\r\n            {TranslateString(999, 'Check your stats and collect achievements')}\r\n          </Heading>\r\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\r\n        </div>\r\n        {canClaim && (\r\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\r\n            {TranslateString(999, \"You've got a gift to claim!\")}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React, { ImgHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BunnyPlaceholderIcon } from 'lionuikit'\r\n\r\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n  badge?: string\r\n}\r\n\r\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst StyledAchievementAvatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\r\n  if (!badge) {\r\n    return <NoBadgePlaceholder />\r\n  }\r\n\r\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\r\n}\r\n\r\nexport default AchievementAvatar\r\n","import React from 'react'\r\nimport { Text, TextProps } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { TranslatableText as AchievementTitleType } from 'state/types'\r\n\r\ninterface AchievementTitleProps extends TextProps {\r\n  title: AchievementTitleType\r\n}\r\n\r\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  if (typeof title === 'string') {\r\n    return (\r\n      <Text bold {...props}>\r\n        {title}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { id, fallback, data = {} } = title\r\n\r\n  return (\r\n    <Text bold {...props}>\r\n      {TranslateString(id, fallback, data)}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default AchievementTitle\r\n","import React from 'react'\r\nimport { Text, TextProps } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\ninterface AchievementDescriptionProps extends TextProps {\r\n  description?: AchievementDescriptionType\r\n}\r\n\r\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  if (!description) {\r\n    return null\r\n  }\r\n\r\n  if (typeof description === 'string') {\r\n    return (\r\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\r\n        {description}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { id, fallback, data = {} } = description\r\n\r\n  return (\r\n    <Description color=\"textSubtle\" {...props}>\r\n      {TranslateString(id, fallback, data)}\r\n    </Description>\r\n  )\r\n}\r\n\r\nexport default AchievementDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, PrizeIcon, Text } from 'lionuikit'\r\nimport { Achievement } from 'state/types'\r\nimport AchievementAvatar from './AchievementAvatar'\r\nimport AchievementTitle from './AchievementTitle'\r\nimport AchievementDescription from './AchievementDescription'\r\n\r\ninterface AchievementCardProps {\r\n  achievement: Achievement\r\n}\r\n\r\nconst Details = styled(Flex)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n`\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\r\n  return (\r\n    <Flex>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Details>\r\n        <AchievementTitle title={achievement.title} />\r\n        <AchievementDescription description={achievement.description} />\r\n      </Details>\r\n      <Flex alignItems=\"center\">\r\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\r\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AchievementCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAchievements } from 'state/hooks'\r\nimport AchievementCard from './AchievementCard'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nconst AchievementsList = () => {\r\n  const TranslateString = useI18n()\r\n  const achievements = useAchievements()\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        {achievements.map((achievement) => (\r\n          <AchievementCard key={achievement.id} achievement={achievement} />\r\n        ))}\r\n      </Grid>\r\n      {achievements.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\r\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\r\n            {TranslateString(999, 'No achievments yet!')}\r\n          </Heading>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AchievementsList\r\n","import styled from 'styled-components'\r\n\r\nconst ActionColumn = styled.div`\r\n  flex: none;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 160px;\r\n\r\n    & > button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ActionColumn\r\n","import React from 'react'\r\nimport { Flex, FlexProps, PrizeIcon, Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PointsLabelProps extends FlexProps {\r\n  points: number\r\n}\r\n\r\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\r\n  const TranslateString = useI18n()\r\n  const localePoints = points.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" {...props}>\r\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\r\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PointsLabel\r\n","import React, { useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Flex } from 'lionuikit'\r\nimport { Achievement } from 'state/types'\r\nimport { useToast } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePointCenterIfoContract } from 'hooks/useContract'\r\nimport ActionColumn from '../ActionColumn'\r\nimport PointsLabel from './PointsLabel'\r\nimport AchievementTitle from '../AchievementTitle'\r\nimport AchievementAvatar from '../AchievementAvatar'\r\nimport AchievementDescription from '../AchievementDescription'\r\n\r\ninterface AchievementRowProps {\r\n  achievement: Achievement\r\n  onCollectSuccess?: (achievement: Achievement) => void\r\n}\r\n\r\nconst StyledAchievementRow = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  padding-bottom: 16px;\r\n  padding-top: 16px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Body = styled(Flex)`\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-left: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\r\n  const [isCollecting, setIsCollecting] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const pointCenterContract = usePointCenterIfoContract()\r\n  const { account } = useWallet()\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const handleCollectPoints = () => {\r\n    pointCenterContract.methods\r\n      .getPoints(achievement.address)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsCollecting(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsCollecting(false)\r\n        onCollectSuccess(achievement)\r\n        toastSuccess('Points Collected!')\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsCollecting(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <StyledAchievementRow>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Body>\r\n        <Details>\r\n          <AchievementTitle title={achievement.title} />\r\n          <AchievementDescription description={achievement.description} />\r\n        </Details>\r\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\r\n        <ActionColumn>\r\n          <Button\r\n            onClick={handleCollectPoints}\r\n            isLoading={isCollecting}\r\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n            disabled={isCollecting}\r\n            variant=\"secondary\"\r\n          >\r\n            {TranslateString(999, 'Collect')}\r\n          </Button>\r\n        </ActionColumn>\r\n      </Body>\r\n    </StyledAchievementRow>\r\n  )\r\n}\r\n\r\nexport default AchievementRow\r\n","import React, { useEffect, useState } from 'react'\r\nimport { sumBy } from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from 'lionuikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport { Achievement } from 'state/types'\r\nimport { addPoints } from 'state/profile'\r\nimport { addAchievement } from 'state/achievements'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getClaimableIfoData } from 'utils/achievements'\r\nimport AchievementRow from './AchievementRow'\r\n\r\nconst ClaimPointsCallout = () => {\r\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\r\n  const TranslateString = useI18n()\r\n  const dispatch = useDispatch()\r\n  const { profile } = useProfile()\r\n  const { account } = useWallet()\r\n\r\n  useEffect(() => {\r\n    const fetchIfoClaims = async () => {\r\n      const ifoData = await getClaimableIfoData(account)\r\n      setClaimableAchievement(ifoData)\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoClaims()\r\n    }\r\n  }, [account, dispatch, setClaimableAchievement])\r\n\r\n  const handleCollectSuccess = (achievement: Achievement) => {\r\n    dispatch(addAchievement(achievement))\r\n    dispatch(addPoints(achievement.points))\r\n\r\n    setClaimableAchievement((prevClaimableAchievements) =>\r\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\r\n    )\r\n  }\r\n\r\n  if (!profile?.isActive) {\r\n    return null\r\n  }\r\n\r\n  if (claimableAchievements.length === 0) {\r\n    return null\r\n  }\r\n\r\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\r\n\r\n  return (\r\n    <Card isActive mb=\"32px\">\r\n      <CardHeader>\r\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\r\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\r\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\r\n            <Heading size=\"lg\">\r\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\r\n            </Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {claimableAchievements.map((achievement) => (\r\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ClaimPointsCallout\r\n","import useI18n from 'hooks/useI18n'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from 'lionuikit'\r\n\r\ninterface MenuProps {\r\n  activeIndex?: number\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"24px\">\r\n        <RouterLink to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\r\n          </Flex>\r\n        </RouterLink>\r\n      </Flex>\r\n\r\n      <Flex mb=\"24px\" justifyContent=\"center\">\r\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" size=\"sm\">\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\r\n            {TranslateString(1090, 'Task Center')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\r\n            {TranslateString(1104, 'Public Profile')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport AchievementsList from './components/AchievementsList'\r\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\r\nimport ComingSoon from './components/ComingSoon'\r\nimport Menu from './components/Menu'\r\n\r\nconst TaskCenter = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <ClaimPointsCallout />\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {TranslateString(1092, 'Achievements')}\r\n              </Heading>\r\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <AchievementsList />\r\n        </CardBody>\r\n      </Card>\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {TranslateString(1090, 'Task Center')}\r\n              </Heading>\r\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\r\n              <Text as=\"p\">\r\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\r\n              </Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCenter\r\n","import styled, { DefaultTheme } from 'styled-components'\r\nimport { CardHeader as UIKitCardHeader } from 'lionuikit'\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst CardHeader = styled(UIKitCardHeader)`\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  position: relative;\r\n`\r\n\r\nexport default CardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'lionuikit'\r\nimport { Nft } from 'config/constants/types'\r\n\r\ninterface CollectibleCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\r\n  return (\r\n    <div>\r\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\r\n      <Text bold mb=\"8px\">\r\n        {nft.name}\r\n      </Text>\r\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\r\n        {nft.description}\r\n      </Text>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectibleCard\r\n","import React from 'react'\r\nimport { Heading, Text, Flex, ChevronRightIcon } from 'lionuikit'\r\nimport { Link } from 'react-router-dom'\r\nimport useI18n from 'hooks/useI18n'\r\nimport nfts from 'config/constants/nfts'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport styled from 'styled-components'\r\nimport CollectibleCard from './CollectibleCard'\r\n\r\nconst CollectibleList = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 24px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 24px 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const TranslateString = useI18n()\r\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\r\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\r\n        {TranslateString(999, 'Pancake Collectibles')}\r\n      </Heading>\r\n      <Text as=\"p\">\r\n        {TranslateString(\r\n          999,\r\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\">\r\n        {TranslateString(\r\n          999,\r\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\r\n        )}\r\n      </Text>\r\n      {nftsInWallet.length > 0 && (\r\n        <CollectibleList>\r\n          {nftsInWallet.map((nftInWallet) => (\r\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\r\n          ))}\r\n        </CollectibleList>\r\n      )}\r\n      {nftsInWallet.length === 0 && (\r\n        <Flex justifyContent=\"center\" p=\"32px\">\r\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\r\n            {TranslateString(999, 'No NFTs Found')}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\r\n        <ChevronRightIcon />\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useModal } from 'lionuikit'\r\nimport EditProfileModal from './EditProfileModal'\r\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\r\n\r\nconst EditOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\r\n  background-size: 24px;\r\n  border-radius: 50%;\r\n  left: 0;\r\n  height: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: opacity 300ms;\r\n  width: 100%;\r\n  z-index: 3;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    background-size: 48px;\r\n  }\r\n`\r\n\r\nconst StyledEditProfileAvatar = styled.div`\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n\r\n    ${EditOverlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n\r\n  return (\r\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\r\n      <ProfileAvatar profile={profile} />\r\n      <EditOverlay />\r\n    </StyledEditProfileAvatar>\r\n  )\r\n}\r\n\r\nexport default EditProfileAvatar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Tag,\r\n  Text,\r\n  PrizeIcon,\r\n  OpenNewIcon,\r\n  BlockIcon,\r\n} from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useProfile } from 'state/hooks'\r\nimport Menu from './components/Menu'\r\nimport CardHeader from './components/CardHeader'\r\nimport Collectibles from './components/Collectibles'\r\nimport WalletNotConnected from './components/WalletNotConnected'\r\nimport StatBox from './components/StatBox'\r\nimport EditProfileAvatar from './components/EditProfileAvatar'\r\nimport AchievementsList from './components/AchievementsList'\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 0 16px;\r\n  }\r\n`\r\n\r\nconst Username = styled(Heading)`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 40px;\r\n    line-height: 44px;\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  position: absolute;\r\n  right: 24px;\r\n  top: 24px;\r\n`\r\n\r\nconst ResponsiveText = styled(Text)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst AddressLink = styled(Link)`\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80px;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst PublicProfile = () => {\r\n  const { account } = useWallet()\r\n  const { profile } = useProfile()\r\n  const TranslateString = useI18n()\r\n\r\n  if (!account) {\r\n    return <WalletNotConnected />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu activeIndex={1} />\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\r\n              <EditProfileAvatar profile={profile} />\r\n              <Content>\r\n                <Username>{`@${profile.username}`}</Username>\r\n                <Flex alignItems=\"center\">\r\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\r\n                    {account}\r\n                  </AddressLink>\r\n                  <OpenNewIcon ml=\"4px\" />\r\n                </Flex>\r\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\r\n              </Content>\r\n            </Flex>\r\n            <Status>\r\n              {profile.isActive ? (\r\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\r\n                  {TranslateString(698, 'Active')}\r\n                </Tag>\r\n              ) : (\r\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\r\n                  {TranslateString(999, 'Paused')}\r\n                </Tag>\r\n              )}\r\n            </Status>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\r\n            <Section>\r\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\r\n                {TranslateString(1092, 'Achievements')}\r\n              </Heading>\r\n              <AchievementsList />\r\n            </Section>\r\n            <Collectibles />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublicProfile\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport Page from 'components/layout/Page'\r\nimport PageLoader from 'components/PageLoader'\r\nimport { useFetchAchievements, useProfile } from 'state/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWallet()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n      <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}