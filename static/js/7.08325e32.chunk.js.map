{"version":3,"sources":["utils/erc20.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hooks/useTokenBalance.ts","utils/getTimePeriods.ts","hooks/useAllowance.ts","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","useWallet","ethereum","res","fetchBalance","useTokenBalance","fastRefresh","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","useLotteryAllowance","setAllowance","lotteryContract","useLottery","useCake","fetchAllowance","refreshInterval","setInterval","clearInterval","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch","React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","map","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","styled","div","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","bold","color","Title","Heading","attrs","as","size","theme","colors","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useCallback","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","onClick","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","Input","endAdornment","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","ModalActions","WarningModal","CardActions","TicketCard","cakeBalance","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","ExpandableSectionButton","expanded","aria-label","role","defaultProps","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","oneTicketMatches","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"sRAMaA,EAAc,SAACC,EAAwBC,GAGlD,OADiB,IADJ,IAAIC,IAAKF,GACIG,IAAIC,UAAUC,EAA8BJ,IAI3DK,EAAY,uCAAG,WAC1BC,EACAC,EACAC,GAH0B,eAAAC,EAAA,+EAMQH,EAAWI,QAAQC,UAAUH,EAASD,EAAmBK,QAAQZ,SAASa,OANlF,cAMlBF,EANkB,yBAOjBA,GAPiB,yDASjB,KATiB,yDAAH,0DAaZG,EAAe,uCAAG,WAC7Bf,EACAgB,EACAC,GAH6B,iBAAAP,EAAA,6DAKvBQ,EAAWnB,EAAYC,EAAUgB,GALV,kBAOGE,EAASP,QAAQQ,UAAUF,GAAaH,OAP3C,cAOrBM,EAPqB,yBAQpBA,GARoB,yDAUpB,KAVoB,yDAAH,2D,iCCxBb,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBrB,KAAKQ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,qPEYIU,EAAiB,WAAO,IAC3BC,EAAgBC,cAAhBD,YAD0B,EAEIE,qBAFJ,mBAE3BC,EAF2B,KAEdC,EAFc,KAclC,OAVAC,qBAAU,WAAM,4CACd,8BAAAhC,EAAA,6DACQiC,EAAe5C,YAAY6C,EAASC,eAD5C,SAEuBF,EAAahC,QAAQ6B,cAAc1B,OAF1D,OAEQgC,EAFR,OAGEL,EAAe,IAAIM,IAAUD,IAH/B,4CADc,uBAAC,WAAD,wBAOdE,KACC,CAACX,IAEGG,GAGIS,EAAmB,SAACjC,GAA0B,IAAD,EAC1BuB,mBAAS,IAAIQ,IAAU,IADG,mBACjD3B,EADiD,KACxC8B,EADwC,OAEeC,cAA/D1C,EAFgD,EAEhDA,QAAS2C,EAFuC,EAEvCA,SACTf,EAAgBC,cAAhBD,YAaR,OAXAK,qBAAU,WAMJjC,GAAW2C,GALG,uCAAG,4BAAA1C,EAAA,sEACDK,YAAgBqC,EAAUpC,EAAc,8CADvC,OACbqC,EADa,OAEnBH,EAAW,IAAIH,IAAUM,IAFN,2CAAH,oDAMhBC,KAED,CAAC7C,EAAS2C,EAAUpC,EAAcqB,IAE9BjB,GAGMmC,IAvDS,SAACvC,GAA0B,IAAD,EAClBuB,mBAAS,IAAIQ,IAAU,IADL,mBACzC3B,EADyC,KAChC8B,EADgC,OAEuBC,cAA/D1C,EAFwC,EAExCA,QAAS2C,EAF+B,EAE/BA,SACTI,EAAgBlB,cAAhBkB,YAaR,OAXAd,qBAAU,WAMJjC,GAAW2C,GALG,uCAAG,4BAAA1C,EAAA,sEACDK,YAAgBqC,EAAUpC,EAAcP,GADvC,OACb4C,EADa,OAEnBH,EAAW,IAAIH,IAAUM,IAFN,2CAAH,oDAMhBC,KAED,CAAC7C,EAAS2C,EAAUpC,EAAcwC,IAE9BpC,I,iCC1BT,IACMqC,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQD,EACNE,EAAW,CACfC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTP,QAAS,GA8BX,OA3BIC,GAASH,IACXI,EAASC,MAAQK,KAAKC,MAAMR,EAAQH,GACpCG,GAASC,EAASC,MAAQL,GAGxBG,GAASJ,IACXK,EAASE,OAASI,KAAKC,MAAMR,EAAQJ,GACrCI,GAASC,EAASE,OAASP,GAGzBI,GAASL,IACXM,EAASG,KAAOG,KAAKC,MAAMR,EAAQL,GACnCK,GAASC,EAASG,KAAOT,GAGvBK,GAASN,IACXO,EAASI,MAAQE,KAAKC,MAAMR,EAAQN,GACpCM,GAASC,EAASI,MAAQX,GAGxBM,GA1CoB,KA2CtBC,EAASK,QAAUC,KAAKC,MAAMR,EA3CR,IA4CtBA,GA5CsB,GA4CbC,EAASK,SAGpBL,EAASF,QAAUC,EAEZC,I,wLCzCIQ,EAAsB,WAAO,IAAD,EACLjC,mBAAS,IAAIQ,IAAU,IADlB,mBAChCnC,EADgC,KACrB6D,EADqB,KAE/BhE,EAAiC0C,cAAjC1C,QACFiE,EAAkBC,cAClBhC,EAAeiC,cAerB,OAbAlC,qBAAU,WACR,IAAMmC,EAAc,uCAAG,4BAAAnE,EAAA,sEACHJ,YAAaqC,EAAc+B,EAAiBjE,GADzC,OACf4C,EADe,OAErBoB,EAAa,IAAI1B,IAAUM,IAFN,2CAAH,qDAKhB5C,GAAWkC,GAAgBA,GAC7BkC,IAEF,IAAMC,EAAkBC,YAAYF,EAAgB,KACpD,OAAO,kBAAMG,cAAcF,MAC1B,CAACrE,EAASkC,EAAc+B,IAEpB9D,GAIIqE,EAAkB,SAACC,EAAyBC,EAAwBC,GAAsB,IAC7F3E,EAAiC0C,cAAjC1C,QAD4F,EAElE8B,mBAAS,MAFyD,mBAE7F3B,EAF6F,KAElF6D,EAFkF,KAgBpG,OAZA/B,qBAAU,YACG,uCAAG,4BAAAhC,EAAA,+EAEQwE,EAAcvE,QAAQC,UAAUH,EAAS0E,GAAgBrE,OAFjE,OAEJuC,EAFI,OAGVoB,EAAa,IAAI1B,IAAUM,IAHjB,gDAKVoB,EAAa,MALH,yDAAH,qDAQXY,KACC,CAAC5E,EAAS0E,EAAgBD,EAAeE,IAErCxE,I,8PCtCM0E,OAAMC,cAAc,CACjCC,wBAAyB,EACzBC,cAAc,EACdC,YAAa,K,uFCFFC,GAAS,uCAAG,WAAOC,EAAKC,GAAZ,+BAAAnF,EAAA,yDACjBoF,EAAOC,eACPC,EAAQ,IAAIF,EAAK3F,IAAIC,SAAS6F,GAAcC,gBAC5CC,EAAM,IAAIC,KAAUR,GACtBvC,EAAM,KACNwC,EAAM/D,OAAS,KALI,iBAMjBL,EAAI,EANa,IAAAf,EAAA,wCAAAA,EAAA,6DAQb2F,EAAWR,EAAMS,MAAU,IAAJ7E,EAAS,KAAOA,EAAI,IAC3C8E,EAAWF,EAASG,KAAI,SAAC1F,GAAD,MAAU,CAACA,EAAK,GAAG2F,cAAeN,EAAIO,mBAAmB5F,EAAK,GAAIA,EAAK,QATlF,SAUUkF,EAAMrF,QAAQgG,UAAUJ,GAAUzF,OAV5C,gBAUX8F,EAVW,EAUXA,WACRnF,IACA4B,EAAMA,EAAIwD,OAAOD,EAAWJ,KAAI,SAAC1F,EAAMgG,GAAP,OAAiBX,EAAIY,qBAAqBV,EAASS,GAAO,GAAIhG,OAZ3E,sDAOdW,EAAIoE,EAAM/D,OAAS,KAPL,iHAefyE,EAAWV,EAAMW,KAAI,SAAC1F,GAAD,MAAU,CAACA,EAAK,GAAG2F,cAAeN,EAAIO,mBAAmB5F,EAAK,GAAIA,EAAK,QAf7E,UAgBQkF,EAAMrF,QAAQgG,UAAUJ,GAAUzF,OAhB1C,iBAgBb8F,EAhBa,EAgBbA,WACRvD,EAAMuD,EAAWJ,KAAI,SAAC1F,EAAMW,GAAP,OAAa0E,EAAIY,qBAAqBlB,EAAMpE,GAAG,GAAIX,MAjBnD,iCAmBhBuC,GAnBgB,4CAAH,wDAsBT2D,GAAQ,uCAAG,WAAOtC,EAAiBuC,EAAOC,EAAazG,GAA5C,SAAAC,EAAA,wFAEbgE,EAAgB/D,QACpBqG,SAAS,IAAIjE,KAAUkE,GAAOE,MAAM,IAAIpE,KAAU,IAAIqE,IAAI,KAAKC,WAAYH,GAC3EI,KAAK,CAAEC,KAAM9G,IACb+G,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBANM,yDASbC,QAAQC,MAAR,OATa,wDAAH,4DAaRC,GAAU,uCAAG,WAAOnD,EAAiBoD,EAAiBrH,EAASsH,GAAlD,iCAAArH,EAAA,8DACLqH,EADK,qCACsBrD,EAAgB/D,QAAQqH,aAAalH,OAD3D,iCAClBkH,EADkB,cAEHC,GAAiBH,EAAiBrH,GAF/B,cAElBqB,EAFkB,OAKlBoG,EAASC,MAAMC,MAAM,KAAM,CAAEtG,WAAU0E,KAAI,SAAC9F,EAAGe,GAAJ,MAAU,CACzDqG,EAAgBjH,QAAQZ,QACxB,sBACA,CAACQ,EAASgB,OARY,UAUNkE,GAAU0C,GAAWH,GAVf,eAUlB7E,EAVkB,OAYlBiF,EAAWjF,EAAImD,KAAI,SAAC+B,GAAD,OAAQA,EAAGlB,cAE9BmB,EAASF,EAAS9B,KAAI,SAAC+B,GAAD,MAAQ,CAACT,EAAgBjH,QAAQZ,QAAS,uBAAwB,CAACsI,OAdvE,UAeG5C,GAAU0C,GAAWG,GAfxB,eAelBC,EAfkB,OAiBlBC,EAAgB,GACtBD,EAAaE,QAAb,uCAAqB,WAAOC,EAAanH,GAApB,SAAAf,EAAA,sDACf,IAAIqC,KAAU6F,GAAaC,GAAGb,IAChCU,EAAcI,KAAKR,EAAS7G,IAFX,2CAArB,yDAKMsH,EAASL,EAAclC,KAAI,SAAC+B,GAAD,MAAQ,CAACT,EAAgBjH,QAAQZ,QAAS,oBAAqB,CAACsI,OAvBzE,UAwBF5C,GAAU0C,GAAWU,GAxBnB,eAwBlBC,EAxBkB,iBA0BlBC,GAAiBvE,GA1BC,iCA2BjBsE,GA3BiB,4CAAH,4DA8BVf,GAAgB,uCAAG,WAAOH,EAAiBrH,GAAxB,SAAAC,EAAA,+EACvBoH,EAAgBnH,QAAQQ,UAAUV,GAASK,QADpB,2CAAH,wDAIhBoI,GAAU,uCAAG,WAAOxE,EAAiBoD,EAAiBrH,GAAzC,iCAAAC,EAAA,sEAClBgE,EAAgB/D,QAAQqH,aAAalH,OADnB,uBAEHmH,GAAiBH,EAAiBrH,GAF/B,cAElBqB,EAFkB,OAIlBoG,EAASC,MAAMC,MAAM,KAAM,CAAEtG,WAAU0E,KAAI,SAAC9F,EAAGe,GAAJ,MAAU,CACzDqG,EAAgBjH,QAAQZ,QACxB,sBACA,CAACQ,EAASgB,OAPY,SASNkE,GAAU0C,GAAWH,GATf,cASlB7E,EATkB,OAUlBiF,EAAWjF,EAAImD,KAAI,SAAC+B,GAAD,OAAQA,EAAGlB,cAE9BmB,EAASF,EAAS9B,KAAI,SAAC+B,GAAD,MAAQ,CAACT,EAAgBjH,QAAQZ,QAAS,iBAAkB,CAACsI,OAZjE,UAaI5C,GAAU0C,GAAWG,GAbzB,eAalBW,EAbkB,OAelBC,EAAed,EAASe,QAAO,SAACd,EAAIzB,GAAL,OAAgBqC,EAAcrC,GAAO,MAEpEiC,EAASK,EAAa5C,KAAI,SAAC+B,GAAD,MAAQ,CAAC7D,EAAgB7D,QAAQZ,QAAS,gBAAiB,CAACsI,OAjBpE,UAkBF5C,GAAU2D,GAAYP,GAlBpB,eAkBlBQ,EAlBkB,OAoBpBC,EAAiB,GACrBD,EAAQZ,SAAQ,SAACc,EAAGhI,GACdgI,EAAI,GACND,EAAeV,KAAKM,EAAa3H,OAIjC+H,EAAe1H,OAAS,MAC1B0H,EAAiBA,EAAelD,MAAM,EAAG,MA5BnB,4BAgCf5B,EAAgB/D,QACpBuI,WAAWM,GACXlC,KAAK,CAAEC,KAAM9G,IACb+G,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBApCQ,4DAuCfC,QAAQC,MAAR,OAvCe,2DAAH,0DA2CV8B,GAAa,uCAAG,WAAOhF,EAAiBoD,EAAiBrH,GAAzC,yCAAAC,EAAA,+EAEAgE,EAAgB/D,QAAQqH,aAAalH,OAFrC,cAEnBkH,EAFmB,gBAGJC,GAAiBH,EAAiBrH,GAH9B,cAGnBqB,EAHmB,OAKnBoG,EAASC,MAAMC,MAAM,KAAM,CAAEtG,WAAU0E,KAAI,SAAC9F,EAAGe,GAAJ,MAAU,CACzDqG,EAAgBjH,QAAQZ,QACxB,sBACA,CAACQ,EAASgB,OARa,UAUPkE,GAAU0C,GAAWH,GAVd,eAUnB7E,EAVmB,OAWnBiF,EAAWjF,EAAImD,KAAI,SAAC+B,GAAD,OAAQA,EAAGlB,cAC9BmB,EAASF,EAAS9B,KAAI,SAAC+B,GAAD,MAAQ,CAACT,EAAgBjH,QAAQZ,QAAS,uBAAwB,CAACsI,OAZtE,UAaE5C,GAAU0C,GAAWG,GAbvB,eAanBC,EAbmB,OAcnBM,EAAST,EAAS9B,KAAI,SAAC+B,GAAD,MAAQ,CAACT,EAAgBjH,QAAQZ,QAAS,iBAAkB,CAACsI,OAdhE,UAeG5C,GAAU0C,GAAWU,GAfxB,eAenBI,EAfmB,iBAiBJF,GAAiBvE,GAjBb,eAiBnBiF,EAjBmB,OAmBnBjB,EAAgB,GACtBD,EAAaE,QAAb,uCAAqB,WAAOC,EAAanH,GAApB,SAAAf,EAAA,uDAEdiJ,GAAUf,EAAYvB,aAAeW,KAC9BmB,EAAc1H,GAAG,IAC3BiH,EAAcI,KAAKR,EAAS7G,KAJX,2CAArB,yDAQMmI,EAASlB,EAAclC,KAAI,SAAC+B,GAAD,MAAQ,CAAC7D,EAAgB7D,QAAQZ,QAAS,gBAAiB,CAACsI,OA5BpE,UA8BH5C,GAAU2D,GAAYM,GA9BnB,eA8BnBL,EA9BmB,OA+BnBM,EAAQN,EAAQO,QAAO,SAACC,EAAGC,GAAJ,OAAUjH,KAAUkH,IAAIF,EAAGC,KAAIjH,KAAU,IA/B7C,kBAiClB8G,GAjCkB,kCAmCzBlC,QAAQC,MAAR,MAnCyB,iCAqCpB7E,KAAU,IArCU,0DAAH,0DAwCbmH,GAAe,uCAAG,WAAOxF,GAAP,eAAAhE,EAAA,sEACJgE,EAAgB/D,QAAQqH,aAAalH,OADjC,cACvBkH,EADuB,yBAEtBtD,EAAgB/D,QAAQuJ,gBAAgBlC,GAAYlH,QAF9B,2CAAH,sDAKfqJ,GAAM,uCAAG,WAAOzF,GAAP,SAAAhE,EAAA,+EACbgE,EAAgB/D,QAAQyJ,YAAYtJ,QADvB,2CAAH,sDAINuJ,GAAoB,uCAAG,WAAO3F,GAAP,eAAAhE,EAAA,sEACTgE,EAAgB/D,QAAQqH,aAAalH,OAD5B,cAC5BkH,EAD4B,yBAE3BA,GAF2B,2CAAH,sDAKpBiB,GAAgB,uCAAG,WAAOvE,GAAP,SAAAhE,EAAA,+EACvBgE,EAAgB/D,QAAQgJ,SAAS7I,QADV,2CAAH,sDAIhBwJ,GAAuB,uCAAG,WAAO5F,EAAiB6F,GAAxB,iBAAA7J,EAAA,sEACdgE,EAAgB/D,QAAQqH,aAAalH,OADvB,cACjCkH,EADiC,gBAEhBtD,EAAgB/D,QAAQgJ,SAAS7I,OAFjB,uBAInCkH,GAAc,GAJqB,mBAOdtD,EAAgB/D,QAAQ6J,cAAcxC,EAAY,EAAIuC,GAAazJ,OAPrD,eAO7B2J,EAP6B,yBAQ5BA,EAAS,KAAOC,MARY,kCAUnC/C,QAAQC,MAAR,MAVmC,iCAY9B,GAZ8B,0DAAH,wDAevB+C,GAAiB,uCAAG,WAAOjG,GAAP,uBAAAhE,EAAA,sEACNgE,EAAgB/D,QAAQqH,aAAalH,OAD/B,cACzBkH,EADyB,OAEzB4C,EAAU,GAFe,SAGVlG,EAAgB/D,QAAQgJ,SAAS7I,OAHvB,WAGzB6I,EAHyB,SAKa,IAA7BkB,SAAS7C,EAAY,IALL,yCAMtB,CAAC,EAAG,EAAG,EAAG,IANY,UAQ1B2B,EAR0B,iBASpBlI,EAAI,EATgB,aASbA,EAAI,GATS,6BAU3BmJ,EAV2B,UAUNlG,EAAgB/D,QAAQmK,eAAe9C,EAAa,EAAGvG,GAAGX,OAVpD,qBAU4DuG,WAV5D,KAUnByB,KAVmB,wBASNrH,IATM,gDAapBA,EAAI,EAbgB,aAabA,EAAI,GAbS,6BAc3BmJ,EAd2B,UAcNlG,EAAgB/D,QAAQoK,eAAetJ,GAAGX,OAdpC,qBAc4CuG,WAd5C,KAcnByB,KAdmB,wBAaNrH,IAbM,iDAiBxBmJ,GAjBwB,4CAAH,sD,sCCtKfI,GAnBe,WAAO,IAAD,EACYzI,oBAAS,GADrB,mBAC3B0I,EAD2B,KACVC,EADU,KAE1BzK,EAAY0C,eAAZ1C,QACFiE,EAAkBC,eAaxB,OAXAjC,qBAAU,WACJjC,GAAWiE,GACW,uCAAG,4BAAAhE,EAAA,sEACLuI,GAAiBvE,GADZ,OACnByG,EADmB,OAEzBD,EAAmBC,GAFM,2CAAH,oDAKxBC,KAED,CAAC3K,EAASiE,IAENuG,GCxBII,GAAiB,WAAO,IAAD,EACQ9I,oBAAS,IAAI+I,MAAOC,WAD5B,mBAC3BC,EAD2B,KACZC,EADY,KAalC,OAVA/I,qBAAU,WACR,IAIMgJ,EAAU3G,aAAY,WAH1B0G,GAAiB,SAACE,GAAD,OAAgBA,EAAa,SAGN,KAE1C,OAAO,kBAAM3G,cAAc0G,MAC1B,IAEIF,G,UCZHI,GAAsB,CAAC,EAAG,IAa1BC,GAAyB,SAACL,GAC9B,IAMIM,EANEC,EAAO,IAAIT,KAAKE,GAChBQ,EAAcD,EAAKE,cACnBC,EAdsB,SAACF,GAC7B,QAAQ,GACN,KAAKA,EAAcJ,GAAoB,IAAMI,GAAeJ,GAAoB,GAC9E,OAAOA,GAAoB,GAC7B,KAAKI,EAAcJ,GAAoB,GACrC,OAAOA,GAAoB,GAC7B,QACE,OAAO,GAOaO,CAAsBH,GAM9C,GAHkD,IAApBE,GAAyBF,GAAe,GAAKA,GAAe,GAG/D,CACzB,IAAMI,EAAW,IAAId,KAAKE,GACpBa,EAAUD,EAASE,aAAe,EACxCF,EAASG,WAAWF,GACpBP,EAAuBM,EAASI,YAAYN,EAAiB,EAAG,EAAG,QAEnEJ,EAAuBC,EAAKS,YAAYN,EAAiB,EAAG,EAAG,GAGjE,OAAOJ,GAKHW,GAAwB,SAACrI,EAAOC,GAAR,gBAAuBwG,SAASzG,GAAhC,cAA4CyG,SAASxG,GAArD,MAEjBqI,GAAoB,SAAClB,GAChC,IACMmB,EALsB,SAACnB,GAAD,OAA6D,MAAzCX,SAASW,EAAgB,MAAW,GAIzDoB,CAAsBpB,GACEA,EAC3CnH,EAAYR,aAAe8I,EAAwB,KAAnDtI,QACAD,EAAUP,aAAe8I,EAAwB,KAAjDvI,MACR,OAAOqI,GAAsBrI,EAAOC,IAazBwI,GAAqB,SAACrB,GAKjC,OAAO,KAHSK,GAAuBL,GACFA,GAFV,MAG6C,K,QClDpEsB,GAAkBC,KAAOC,IAAV,+DAKfC,GAAiBF,KAAOC,IAAV,8IAQdE,GAAoBH,KAAOC,IAAV,yHAOjBG,GAAoBJ,aAAOK,KAAPL,CAAH,mDAgCRM,GA7BS,WACtB,IAAMC,EAAkBC,eAClBtC,EAAkBD,KAClBQ,EAAgBH,KAChBmC,EAAsBd,GAAkBlB,GACxCiC,EDQ0B,SAACjC,GACjC,IACMkC,EADsB7B,GAAuBL,GACFA,EACzCnH,EAAYR,aAAe6J,EAAqB,KAAhDrJ,QACAD,EAAUP,aAAe6J,EAAqB,KAA9CtJ,MACR,OAAOqI,GAAsBrI,EAAOC,GCbPsJ,CAAmBnC,GAEhD,OACE,gBAACsB,GAAD,WACE,eAAC,KAAD,CAAUc,YAAaf,GAAmBrB,GAAgBqC,cDYxB,EAAI,GAAM,ICZkDC,mBAAiB,IAC/G,gBAACb,GAAD,WACE,eAACE,GAAD,CAAmBY,SAAS,OAAOC,MAAI,EAACC,MAAM,WAA9C,SACGhD,EAAkBuC,EAAsBC,IAE3C,eAAC,KAAD,CAAMM,SAAS,OAAOC,MAAI,EAACC,MAAM,mBAAjC,SACqBX,EAAgB,EAAlCrC,EAAqC,oBAA0C,2BAGnFA,GACC,eAACiC,GAAD,UACE,gBAAC,KAAD,CAAMe,MAAM,mBAAZ,UACGR,EADH,IAC0BH,EAAgB,EAAG,+BClDjDY,GAAQnB,aAAOoB,MAASC,MAAM,CAAEC,GAAI,KAAMC,KAAM,MAAxCvB,CAAH,mEACA,qBAAGwB,MAAkBC,OAAOC,aAIjCC,GAAQ3B,aAAOK,KAAPL,CAAH,wFAML4B,GAAa5B,KAAOC,IAAV,mJAMV4B,GAAkB7B,aAAO8B,KAAP9B,CAAH,qHAKjB,qBAAGwB,MAAkBO,aAAaC,MAKhCC,GAAcjC,KAAOC,IAAV,iJAIb,qBAAGuB,MAAkBO,aAAaC,MAIlC,qBAAGR,MAAkBO,aAAaG,MAKhCC,GAAenC,KAAOC,IAAV,6PAQd,qBAAGuB,MAAkBO,aAAaC,MAKlC,qBAAGR,MAAkBO,aAAaG,MAwBvBE,GAnBF,WACX,IAAM7B,EAAkBC,eAExB,OACE,eAACoB,GAAD,UACE,gBAACC,GAAD,WACE,gBAACI,GAAD,WACE,eAACd,GAAD,UAAQZ,EAAgB,IAAK,sBAC7B,eAACoB,GAAD,UAAQpB,EAAgB,IAAK,2BAC7B,eAACoB,GAAD,UAAQpB,EAAgB,IAAK,wDAE/B,eAAC4B,GAAD,UACE,eAAC,GAAD,YC3EKnC,QAAOC,IAAtB,8GACsB,qBAAGuB,MAAkBC,OAAOY,c,mBCkDrCC,GAAgB,WAAO,IAAD,EACK9M,mBAAS,IAAIQ,KAAU,IAD5B,mBAC1BuM,EAD0B,KACbC,EADa,OAEOhN,oBAAS,GAFhB,mBAE1BiN,EAF0B,KAEZC,EAFY,KAGzBhP,EAAY0C,eAAZ1C,QACFqH,EAAkB4H,eAClBhL,EAAkBC,eAElBrB,EAAeqM,sBAAW,sBAAC,4BAAAjP,EAAA,6DAC/B+O,GAAgB,GADe,SAEX/F,GAAchF,EAAiBoD,EAAiBrH,GAFrC,OAEzBoJ,EAFyB,OAG/B0F,EAAe1F,GACf4F,GAAgB,GAJe,2CAK9B,CAAChP,EAASiE,EAAiBoD,IAQ9B,OANApF,qBAAU,WACJjC,GAAWiE,GAAmBoD,GAChCxE,MAED,CAAC7C,EAAS6C,EAAcoB,EAAiBoD,IAErC,CAAE0H,eAAcF,gBAGZM,GAAoB,WAAO,IAAD,EACKrN,mBAAS,CAAC,EAAG,EAAG,EAAG,IADxB,mBAC9BsN,EAD8B,KAChBC,EADgB,KAE/BpL,EAAkBC,eAChBnB,EAAgBlB,eAAhBkB,YAaR,OAXAd,qBAAU,WAMJgC,GALc,uCAAG,4BAAAhE,EAAA,sEACGiK,GAAkBjG,GADrB,OACb6E,EADa,OAEnBuG,EAAkBvG,GAFC,2CAAH,oDAMhBjG,KAED,CAACE,EAAakB,EAAiBoL,IAE3BD,GAGIE,GAA0B,SAACnF,GAAa,IAAD,EACJrI,mBAAS,GADL,mBAC3CyN,EAD2C,KAC1BC,EAD0B,KAE5CvL,EAAkBC,eAChBnB,EAAgBlB,eAAhBkB,YAaR,OAXAd,qBAAU,WAMJgC,GALc,uCAAG,4BAAAhE,EAAA,sEACW4J,GAAwB5F,EAAiBkG,GADpD,OACbsF,EADa,OAEnBD,EAAmBC,GAFA,2CAAH,oDAMhB5M,KAED,CAACoB,EAAiBkG,EAASpH,IAEvBwM,GAGMG,GArGI,WAA2B,IAA1BC,EAAyB,uDAAT,KAAS,EACb7N,mBAAS,IADI,mBACpCyG,EADoC,KAC3BqH,EAD2B,OAEvBlN,eAAZ1C,EAFmC,EAEnCA,QACFqH,EAAkB4H,eAClBhL,EAAkBC,eAJmB,EAKnBrC,eAAhBkB,EALmC,EAKnCA,YAaR,OAXAd,qBAAU,WAMJjC,GAAWiE,GAAmBoD,GALhB,uCAAG,4BAAApH,EAAA,sEACDmH,GAAWnD,EAAiBoD,EAAiBrH,EAAS2P,GADrD,OACb/M,EADa,OAEnBgN,EAAWhN,GAFQ,2CAAH,oDAMhBC,KAED,CAAC7C,EAASiE,EAAiBoD,EAAiBtE,EAAa4M,IAErDpH,GC1BHsH,GAAgBvD,KAAOC,IAAV,miBA4BJuD,GA9BW,kBAAM,eAACD,GAAD,KCuD1BE,GAAUzD,KAAOC,IAAV,+CAIPyD,GAAc1D,KAAOC,IAAV,6GAIN,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMC,OAAOmC,WAGnCC,GAAe7D,aAAO8D,KAAP9D,CAAH,kDACF,SAAC2D,GAAD,OAAWA,EAAMnC,MAAMuC,QAAQ,MAGhCC,GA7D2C,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,UAAW1J,EAAW,EAAXA,KACjF2J,EAAatB,KACbtC,EAAkBC,eAClB4D,EAAcxB,uBAClB,SAACyB,GAEC,IADA,IAAIC,EAAI,EACC5P,EAAIyP,EAAWpP,OAAS,EAAGL,GAAK,EAAGA,IAEtCyP,EAAWzP,IAAM2P,EAAO3P,IAAI4P,IAElC,OAAOA,IAET,CAACH,IAGGI,EAAYN,EAAgBxK,KAAI,SAAC4K,EAAQtK,GAC7C,GAAIqK,EAAYC,EAAO,IAAM,GAAc,QAAT7J,EAAgB,CAChD,IAAMgK,EAAQ,IAAIpJ,MAAMgJ,EAAYC,EAAO,IAAM,GAAGI,KAAK,gBACzD,OAEE,eADA,CACChB,GAAD,WACGe,EACAH,EAAO/J,WACPkK,IAHWzK,GAQlB,OAAO,6BAAgBsK,EAAO/J,YAAfP,MAGjB,OACE,gBAAC,KAAD,CACE2K,MAAOnE,EAAgB,IAAD,6BAA4B0D,EAAgBlP,OAA5C,KAAuD,CAAE4P,QAASV,EAAgBlP,SACxGmP,UAAWA,EAFb,UAIE,eAACR,GAAD,UACE,8BAAKa,MAEP,eAACV,GAAD,CAAce,QAAQ,YAAYC,QAASX,EAA3C,SACG3D,EAAgB,IAAK,eC1CxBuE,GAAkB9E,KAAOC,IAAV,wEAKf8E,GAAc/E,KAAOC,IAAV,yGASX+E,GAAoBhF,KAAOC,IAAV,kDACP,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMuC,QAAQ,MAGzCkB,GAAyBjF,KAAOC,IAAV,gJAQtB4D,GAAe7D,aAAO8D,KAAP9D,CAAH,kDACF,SAAC2D,GAAD,OAAWA,EAAMnC,MAAMuC,QAAQ,MA2DhCmB,GAxDoB,WAAO,IAAD,EACK1P,oBAAS,GADd,mBAChC2P,EADgC,KAChBC,EADgB,KAEjC7E,EAAkBC,eAFe,EAGD8B,KAA9BG,EAH+B,EAG/BA,aAAcF,EAHiB,EAGjBA,YACd8C,ECvC0B,WAAO,IACjC3R,EAAY0C,eAAZ1C,QACFiE,EAAkBC,eAClB0N,EAAwB3C,eAW9B,MAAO,CAAE0C,aATWzC,sBAAW,sBAAC,4BAAAjP,EAAA,+EAEPwI,GAAWxE,EAAiB2N,EAAuB5R,GAF5C,cAEtB6R,EAFsB,yBAGrBA,GAHqB,0DAKrB,GALqB,yDAO7B,CAAC7R,EAASiE,EAAiB2N,KD2BLE,GAAjBH,aACFpJ,EAAUmH,KALuB,EAMVqC,cAAS,eAAC,GAAD,CAAgBxB,gBAAiBhI,EAASzB,KAAK,SAA9EkL,EANgC,oBAQjCC,EAAc/C,sBAAW,sBAAC,sBAAAjP,EAAA,sEAE5ByR,GAAkB,GAFU,SAGPC,IAHO,eAM1BD,GAAkB,GANQ,gDAS5BxK,QAAQC,MAAR,MAT4B,yDAW7B,CAACwK,EAAcD,IAEZQ,EAAWC,aAAiBtD,GAAauD,QAAQ,GAEvD,OACE,gBAACb,GAAD,WACE,eAACF,GAAD,UACE,eAAC,MAAD,MAEF,eAAC,KAAD,CAASzD,GAAG,KAAKC,KAAK,KAAKL,MAAM,YAAjC,SACGX,EAAgB,IAAK,cAEvBkC,GAAgB,eAAC,GAAD,KACfA,GACA,qCACE,gBAACqC,GAAD,WACE,eAAC,KAAD,CAASxD,GAAG,KAAKC,KAAK,KAAKwE,MAAO,CAAEC,YAAa,OAAjD,SACGJ,IAEH,eAAC,KAAD,CAAStE,GAAG,KAAKC,KAAK,KAAtB,uBAMN,eAACyD,GAAD,UACE,eAAC,KAAD,CAAQiB,WAAS,EAACC,SAAUf,EAAgBN,QAASc,EAArD,SACGpF,EAAgB,KAAM,eAG3B,eAAC,GAAD,CAAcqE,QAAQ,OAAOC,QAASa,EAAtC,SACGnF,EAAgB,IAAK,2BEnFxB4F,GAAUnG,KAAOC,IAAV,8CAIPmG,GAAcpG,KAAOC,IAAV,yEAKXoG,GAAarG,aAAOK,KAAPL,CAAH,mDAIVsG,GAAQtG,KAAOuG,IAAV,2FAGP,qBAAG/E,MAAkBO,aAAayE,MAIhC3C,GAAe7D,aAAO8D,KAAP9D,CAAH,kEAuBHyG,GAlBmB,WAChC,IAAMlG,EAAkBC,eAClBvE,EAAUmH,KAFsB,EAGTqC,cAAS,eAAC,GAAD,CAAgBxB,gBAAiBhI,EAASzB,KAAK,SAA9EkL,EAH+B,oBAKtC,OACE,gBAACS,GAAD,WACE,eAACG,GAAD,CAAOI,IAAI,uBAAuBC,IAAI,kBACtC,gBAACP,GAAD,WACE,eAACC,GAAD,CAAYnF,MAAM,eAAlB,SAAkCX,EAAgB,IAAK,iCACvD,eAAC,GAAD,CAAcqE,QAAQ,OAAOC,QAASa,EAAtC,SACGnF,EAAgB,IAAK,8BCnC1BqG,GAAa5G,aAAO6G,KAAP7G,CAAH,mCACZ,SAAC2D,GAAD,OACAA,EAAMmD,WAAN,iIAKwBnD,EAAMnC,MAAMC,OAAOsF,aAL3C,wBAOMpD,EAAMnC,MAAMO,aAAaC,GAP/B,iEAWM2B,EAAMnC,MAAMO,aAAaG,GAX/B,8DA+BW8E,GAbkB,WAAO,IAC9BzE,EAAgBD,KAAhBC,YAGF0E,EADWpB,aAAiBtD,GACR,EAE1B,OACE,eAACqE,GAAD,CAAYE,YAAaG,EAAQC,SAAUD,EAA3C,SACE,eAAC,KAAD,UAAWA,EAAS,eAAC,GAAD,IAAuB,eAAC,GAAD,S,UC9B3CE,GAAiBnH,aAAOoH,KAAPpH,CAAH,6HAOdqH,GAAgBrH,aAAOoB,KAAPpB,CAAH,+CAIb+E,GAAc/E,KAAOC,IAAV,+EAuBFqH,GAhBU,WACvB,IAAM/G,EAAkBC,eAExB,OACE,eAAC,KAAD,CAAM0G,UAAQ,EAAd,SACE,gBAACC,GAAD,WACE,eAAC,GAAD,UACE,eAAC,KAAD,MAEF,eAACE,GAAD,CAAe9F,KAAK,KAApB,SAA0BhB,EAAgB,KAAM,qCAChD,eAACgH,GAAA,EAAD,U,8BC/BKC,GAAc,SAACC,GAAkC,IAAD,EACTjS,oBAAS,GADA,mBACpDkS,EADoD,KACjCC,EADiC,KAEnDC,EAAcC,eAAdD,UAgBR,MAAO,CAAEE,cAdalF,sBAAW,sBAAC,sBAAAjP,EAAA,sEAE9BgU,GAAqB,GAFS,SAGTC,IAHS,eAM5BD,GAAqB,GAEvBF,IAR8B,gDAU9B7M,QAAQC,MAAR,MAV8B,yDAY/B,CAAC+M,EAAWH,IAESC,sB,UCkBpBK,GAAmB/H,KAAOC,IAAV,0BAEhB+H,GAAehI,KAAOC,IAAV,6CACP,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMuC,QAAQ,MAGpCkE,GAA8BjI,KAAOC,IAAV,sEAK3BiI,GAAgBlI,KAAOC,IAAV,6KAER,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMC,OAAOmC,WAQnCuE,GAAoBnI,KAAOoI,KAAV,gEACZ,SAACzE,GAAD,OAAWA,EAAMnC,MAAMC,OAAOmC,WAI1ByE,GApDgC,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,IAAKC,EAA4D,EAA5DA,OAAQC,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC/FpI,EAAkBC,eAExB,OACE,gBAACuH,GAAD,WACE,eAACa,GAAA,EAAD,CACEC,aACE,gBAACZ,GAAD,WACE,eAACE,GAAD,UAAoBI,IACpB,eAACP,GAAD,IACA,+BACE,eAAC,KAAD,CAAQzG,KAAK,KAAKsD,QAAS6D,EAA3B,SACGnI,EAAgB,IAAK,cAK9BkI,SAAUA,EACVK,YAAY,IACZH,MAAOA,IAET,eAACT,GAAD,UAAgB3H,EAAgB,IAAD,UAAS+H,EAAIS,iBAAb,YAAiCP,EAAjC,qB,UCmFtBQ,GAnGuC,SAAC,GAAwB,IA+C1DtL,EA/CoC4K,EAAqB,EAArBA,IAAKpE,EAAgB,EAAhBA,UAAgB,EACtD1O,mBAAS,KAD6C,mBACrEyT,EADqE,KAChEC,EADgE,OAE1C1T,oBAAS,GAFiC,mBAErE2T,EAFqE,KAE1DC,EAF0D,OAGhD5T,oBAAS,GAA5B6T,EAHmE,oBAItE9I,EAAkBC,eAClB8I,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsBlB,KAC5B,CAACA,IAEEmB,EAAaF,mBAAQ,WACzB,OAAOzL,SAAS0L,aAAsBlB,EAAIrI,IAAItC,OAAwB,MACrE,CAAC2K,IAIIoB,ENXwB,WAAO,IAC/BhW,EAAY0C,eAAZ1C,QACFiE,EAAkBC,eAcxB,MAAO,CAAE8R,WAZS9G,sBAAW,uCAC3B,WAAOlF,EAAgBG,GAAvB,eAAAlK,EAAA,+EAEyBsG,GAAStC,EAAiB+F,EAAQG,EAASnK,GAFpE,cAEU6R,EAFV,yBAGWA,GAHX,0DAKW,GALX,yDAD2B,wDAS3B,CAAC7R,EAASiE,KMFWgS,GAAfD,WACFrM,ENOoB,WAAO,IAAD,EACV7H,mBAAS,GADC,mBACzB8S,EADyB,KACpBsB,EADoB,KAE1BjS,EAAkBC,eAElBiS,EAAWjH,sBAAW,sBAAC,4BAAAjP,EAAA,sEACHyJ,GAAOzF,GADJ,OACrB0F,EADqB,OAE3BuM,EAAOvM,GAFoB,2CAG1B,CAAC1F,IAQJ,OANAhC,qBAAU,WACJgC,GACFkS,MAED,CAAClS,EAAiBkS,IAEdvB,EMtBWwB,GACZC,EAAYnH,sBAAW,sBAAC,8BAAAjP,EAAA,sEAE1B0V,GAAgB,GACVtU,EAAS+I,SAASmL,GAGlBpL,EAAUzC,MAAMC,MAAM,KAAM,CAAEtG,WAAU0E,KAAI,iBAAM,CACtDlC,KAAKC,MAAMD,KAAKyS,SAAW3M,GAAa,EACxC9F,KAAKC,MAAMD,KAAKyS,SAAW3M,GAAa,EACxC9F,KAAKC,MAAMD,KAAKyS,SAAW3M,GAAa,EACxC9F,KAAKC,MAAMD,KAAKyS,SAAW3M,GAAa,MAVhB,SAYLqM,EAAW/L,KAAqBrD,WAAYuD,GAZvC,eAexBwL,GAAgB,GAfQ,kDAkB1BzO,QAAQC,MAAR,MAlB0B,0DAoB3B,CAAC6O,EAAYL,EAAiBhM,EAAW4L,IAEtCgB,EAAkBrH,uBAAY,WAC9BsH,OAAOT,GAAcU,KACvBjB,EAAOiB,KAA8B7P,YAErC4O,EAAOO,EAAWnP,cAEnB,CAACmP,IAKJ,OACE,gBAAC,KAAD,CAAO/E,MAAOnE,EAAgB,IAAK,kCAAmC2D,UAAWA,EAAjF,UACE,eAAC,GAAD,CACEyE,MAAOM,EACPP,YAAauB,EACbxB,SA1Ce,SAAC2B,GAAD,OAA0ClB,EAAOkB,EAAEC,cAAc1B,QA2ChFL,IAAKgB,EACLf,OAAO,SACPC,gBAAgB,SAElB,+BACE,eAAC8B,GAAD,UAAO/J,EAAgB,IAAD,qBAAoB5C,KAApB,SAAiD,CAAE4M,IAAK5M,WAEhF,iCACE,eAAC6M,GAAD,UACGjK,EACC,IACA,2FAGJ,eAACkK,GAAD,UAAQlK,EAAgB,IAAD,2BAvBV7C,EAuB6CuL,GAtBtDvL,EAASC,MAsBU,eAEzB,gBAAC+M,GAAA,EAAD,WACE,eAAC,KAAD,CAAQzE,WAAS,EAACrB,QAAQ,YAAYC,QAASX,EAA/C,SACG3D,EAAgB,IAAK,YAExB,eAAC,KAAD,CACE/E,GAAG,uBACHyK,WAAS,EACTC,SACEiD,GACArL,SAASmL,GAAOiB,OAAOT,IACvB3L,SAASmL,GAAOkB,MAChBrM,SAASmL,GAAO,EAElBpE,QAAO,sBAAE,sBAAAlR,EAAA,6DACPyV,GAAa,GADN,SAEDW,IAFC,OAGPX,GAAa,GACblF,IAJO,2CATX,SAgBGiF,EAAY5I,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBASrF+J,GAAOtK,KAAOC,IAAV,2GAIC,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMC,OAAOmC,WAGnC6G,GAAQzK,KAAOC,IAAV,+HAKA,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMC,OAAOmC,WAEnC4G,GAAWxK,KAAOC,IAAV,0FCrGRyD,GAAc1D,KAAOC,IAAV,2GAIN,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMC,OAAOmC,WAG1B+G,GAjC4C,SAAC,GAAmB,IAAjBzG,EAAgB,EAAhBA,UACtD3D,EAAkBC,eAExB,OACE,gBAAC,KAAD,CAAOkE,MAAOnE,EAAgB,IAAK,WAAY2D,UAAWA,EAA1D,UACE,gBAAC,GAAD,WACG3D,EAAgB,IAAK,uCACtB,wBACCA,EAAgB,IAAK,4EACtB,wBACCA,EAAgB,IAAK,mFACtB,wBACCA,EACC,IACA,sHAGJ,eAACmK,GAAA,EAAD,UACE,eAAC,KAAD,CAAQzE,WAAS,EAACpB,QAASX,EAA3B,SACG3D,EAAgB,IAAK,wBCX1BqK,GAAc5K,KAAOC,IAAV,qJAGD,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMuC,QAAQ,MAE3C,qBAAGvC,MAAkBO,aAAaG,MA2DvB2I,GAtDc,WAC3B,IAAMtK,EAAkBC,eAClB3M,EAAY4D,eACZyG,EAAkBD,KAClB6M,EAActU,aAAgBV,gBAC9BmG,EAAUmH,KACV2H,EAAgB9O,EAAQlH,OANG,EAOJ0Q,cAAS,eAAC,GAAD,CAAgBxB,gBAAiBhI,EAASzB,KAAK,SAA9EkL,EAP0B,sBAQND,cAAS,eAACuF,GAAD,KAA7BvD,EAR0B,sBASVhC,cAAS,eAAC,GAAD,CAAgB6C,IAAKwC,EAAaG,UAAU,UAArEC,EAT0B,sBAUY1D,GAAYC,GAAjDK,EAVyB,EAUzBA,cAAeJ,EAVU,EAUVA,kBAiCvB,OACE,eAACkD,GAAD,UACG1M,EACC,gBAAC,KAAD,CAAQgI,UAAQ,EAAhB,cAAmB3F,EAAgB,IAAK,mBAjCvC1M,EAAUsX,WAab,uCACE,eAAC,KAAD,CACEpF,MAAO,CAAEC,YAAa,OACtBC,WAAS,EACTC,SAA4B,IAAlB6E,EACVnG,QAAQ,YACRC,QAASa,EALX,SAOGnF,EAAgB,IAAK,uBAExB,eAAC,KAAD,CAAQ/E,GAAG,oBAAoByK,WAAS,EAACpB,QAASqG,EAAlD,SACG3K,EAAgB,IAAK,mBAtBxB,uCACE,eAAC,KAAD,CAAQ0F,WAAS,EAACC,UAAQ,EAA1B,SACG3F,EAAgB,IAAK,uBAExB,eAAC,KAAD,CAAQ0F,WAAS,EAACC,SAAUwB,EAAmB7C,QAASiD,EAAxD,SACGvH,EAAgB,IAAK,wBC9B5BqG,GAAa5G,aAAO6G,KAAP7G,CAAH,mCACZ,SAAC2D,GAAD,OACAA,EAAMyH,aAAN,mDAIMzH,EAAMnC,MAAMO,aAAaC,GAJ/B,iEAQM2B,EAAMnC,MAAMO,aAAaG,GAR/B,8DAeEmJ,GAAarL,KAAOC,IAAV,sEAKV8E,GAAc/E,KAAOC,IAAV,sGAQXqL,GAAqBtL,KAAOC,IAAV,yEA4CT4K,GAvCyB,SAAC,GAA8B,IAAD,IAA3BO,oBAA2B,SAC9D7K,EAAkBC,eAClBtC,EAAkBD,KAGlB8M,EADU3H,KACcrO,OAExB0J,EAAgBH,KAChBmC,EAAsBvC,GAAmByB,GAAkBlB,GAEjE,OACE,eAAC,GAAD,CAAY2M,aAAcA,EAA1B,SACE,gBAAC,KAAD,WACE,gBAACC,GAAD,WACE,eAAC,GAAD,UACE,eAAC,KAAD,MAEDnN,EACC,gBAACoN,GAAD,WACE,eAAC,KAAD,CAAMtK,SAAS,OAAOE,MAAM,aAA5B,SACGX,EAAgB,IAAK,wBAExB,eAAC,KAAD,CAASgB,KAAK,KAAd,SAAoBd,OAGtB,gBAAC6K,GAAD,WACE,eAAC,KAAD,CAAMtK,SAAS,OAAOE,MAAM,aAA5B,SACGX,EAAgB,IAAK,iCAExB,eAAC,KAAD,CAASgB,KAAK,KAAd,SAAoBwJ,UAI1B,eAACQ,GAAD,UCzEFpF,GAAUnG,KAAOC,IAAV,sJAOD,qBAAGuB,MAAkBC,OAAOmC,WAIlC4H,GAAkE,SAAC,GAA2B,IAAzB3G,EAAwB,EAAxBA,QAAS4G,EAAe,EAAfA,SAClF,OACE,gBAAC,GAAD,CAASC,aAAW,kCAAkCC,KAAK,SAAS9G,QAAS,kBAAMA,KAAnF,UACE,eAAC,KAAD,CAAM3D,MAAM,UAAUD,MAAI,EAA1B,SACGwK,EAAW,OAAS,YAEtBA,EAAW,eAAC,KAAD,IAAoB,eAAC,KAAD,QAKtCD,GAAwBI,aAAe,CACrCH,UAAU,GAGGD,I,kHAAAA,MCrBTK,GAAO7L,KAAOC,IAAV,oIAEwB,SAAC0D,GAAD,OAAYA,EAAMmI,SAAW,EAAI,KAI7DC,GAAmB/L,aAAOK,KAAPL,CAAH,oDAIhBgM,GAAsBhM,aAAOoB,KAAPpB,CAAH,oDAInBiM,GAAWjM,KAAOC,IAAV,qDACK,SAAC0D,GAAD,OAAYA,EAAMuI,aAAevI,EAAMuI,aAAe,UAGnEC,GAAmBnM,aAAOiM,GAAPjM,CAAH,iEA4FPoM,GAxF6B,SAAC,GAMtC,IAAD,IALJC,0BAKI,MALiB,EAKjB,MAJJP,gBAII,SAHJQ,EAGI,EAHJA,eACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,mBAEMC,IAAuBJ,EAAqB,IAAO,IAAIvG,QAAQ,GAC/D4G,IAAwBL,EAAqB,IAAO,IAAIvG,QAAQ,GAChE6G,IAAsBN,EAAqB,IAAO,IAAIvG,QAAQ,GAC9D8G,IAAgBP,EAAqB,IAAO,IAAIvG,QAAQ,GACxDvF,EAAkBC,eAExB,OACE,gBAACqL,GAAD,CAAMC,SAAUA,EAAhB,UACE,eAACG,GAAD,UACE,eAAC,KAAD,CAAMjL,SAAS,OAAOE,MAAM,aAA5B,SACGX,EAAgB,IAAK,mBAGzBuL,GACC,eAACK,GAAD,UACE,eAACJ,GAAD,CAAkB/K,SAAS,OAAOE,MAAM,aAAxC,SACGX,EAAgB,IAAK,eAI5B,eAAC0L,GAAD,UACE,eAACF,GAAD,CAAkB/K,SAAS,OAAOE,MAAM,aAAxC,SACGX,EAAgB,IAAK,iBAI1B,eAAC0L,GAAD,UACE,eAAC,KAAD,CAAS1K,KAAK,KAAd,iBAEDuK,GACC,eAACK,GAAD,UACE,eAACH,GAAD,CAAqBzK,KAAK,KAA1B,SAAgC+K,MAGpC,eAACL,GAAD,UACE,eAACD,GAAD,CAAqBzK,KAAK,KAA1B,SAAgCkL,EAAkB1D,qBAGpD,eAACkD,GAAD,UACE,eAAC,KAAD,CAAMhL,MAAI,EAAV,iBAED6K,GACC,eAACK,GAAD,UACE,eAACJ,GAAD,CAAkB9K,MAAI,EAAtB,SAAwBuL,MAG5B,eAACP,GAAD,UACE,eAACF,GAAD,UAAmBW,EAAmB3D,qBAGxC,eAACkD,GAAD,UACE,eAAC,KAAD,kBAEDH,GACC,eAACK,GAAD,UACE,eAACJ,GAAD,UAAmBQ,MAGvB,eAACN,GAAD,UACE,eAACF,GAAD,UAAmBY,EAAiB5D,qBAGtC,eAACkD,GAAD,CAAUC,aAAa,IAAvB,SACE,gBAAC,KAAD,WAAO3L,EAAgB,IAAD,UAASuL,EAAW,SAAW,YAArD,SAEDA,EACC,uCACE,eAACG,GAAD,CAAUC,aAAa,MACvB,eAACD,GAAD,CAAUC,aAAa,IAAvB,SACE,eAACH,GAAD,UAAmBa,EAAW7D,wBAIlC,eAACkD,GAAD,CAAUC,aAAa,IAAvB,SACE,eAACH,GAAD,UAAmBa,EAAW7D,yBC1GlC8D,GAAc7M,KAAOC,IAAV,0GAMX6M,GAAQ9M,KAAOC,IAAV,oFAGP,qBAAGuB,MAAkBO,aAAaC,MAKhC+K,GAAO/M,KAAOC,IAAV,gDAIJ8E,GAAc/E,KAAOC,IAAV,wGAQX+M,GAAoBhN,KAAOC,IAAV,2EAKjBgN,GAAmBjN,KAAOC,IAAV,iFACV,SAAC0D,GAAD,OAAYA,EAAMuJ,WAAa,OAAS,SAEhD,qBAAG1L,MAAkBO,aAAaC,MAsDvBmL,GAjDS,WACtB,IAAM5M,EAAkBC,eAChB9M,EAAY0C,eAAZ1C,QAFoB,EAGQ8B,oBAAS,GAHjB,mBAGrB0X,EAHqB,KAGTE,EAHS,KAItBf,GAAsBxG,ahBpBC,WAAO,IAAD,EACLrQ,mBAAS,IAAIQ,KAAU,IADlB,mBAC5BwG,EAD4B,KACnB6Q,EADmB,KAE7B1V,EAAkBC,eAChBnB,EAAgBlB,eAAhBkB,YAaR,OAXAd,qBAAU,WAMJgC,GALc,uCAAG,4BAAAhE,EAAA,sEACDwJ,GAAgBxF,GADf,OACbrB,EADa,OAEnB+W,EAAW,IAAIrX,KAAUM,IAFN,2CAAH,oDAMhBC,KAED,CAACoB,EAAiBlB,IAEd+F,EgBIsC8Q,IAAmBxH,QAAQ,GAClEyH,EAAkClB,EAAmBtD,iBACnDyE,EAAyBC,qBAAWC,IAApCF,qBAER,OACE,gBAAC,KAAD,WACE,gBAAC,KAAD,WACG9Z,GACC,gBAAC,KAAD,CAAMia,GAAG,OAAOC,WAAW,SAASC,eAAe,gBAAgB9H,MAAO,CAAE+H,OAAQ,QAApF,UAC4B,IAAzBN,GAA8B,eAAC,KAAD,CAAUM,OAAQ,GAAIC,MAAO,KAC3DP,EAAuB,GACtB,qCACE,eAAC,KAAD,CAAMxM,SAAS,OAAO+E,MAAO,CAAEiI,WAAY,KAA3C,SACGzN,EAAgB,IAAD,iBAAgBiN,GAAwB,CAAEjD,IAAKiD,WAMzE,gBAACX,GAAD,WACE,gBAACE,GAAD,WACE,eAAC,GAAD,UACE,eAAC,KAAD,MAEF,gBAACC,GAAD,WACE,eAAC,KAAD,CAAMhM,SAAS,OAAOE,MAAM,aAA5B,SACGX,EAAgB,IAAK,gBAExB,gBAAC,KAAD,CAASgB,KAAK,KAAd,UAAoBgM,EAApB,iBAGJ,eAACT,GAAD,UACE,eAAC,GAAD,CAAyBjI,QAAS,kBAAMuI,GAAeF,IAAazB,SAAUyB,YAIpF,eAACD,GAAD,CAAkBC,WAAYA,EAA9B,SACE,eAAC,KAAD,UACE,eAAC,GAAD,CAAWb,mBAAoBA,YCmBnC4B,GAAOjO,KAAOrM,EAAV,+FAMJua,GAAMlO,KAAOC,IAAV,oHAOHkO,GAAYnO,KAAOC,IAAV,iLAWTmO,GAAiBpO,KAAOC,IAAV,iLAWdoO,GAAYrO,KAAOC,IAAV,qDAITqO,GAAiBtO,KAAOC,IAAV,2IASdsO,GAAevO,KAAOC,IAAV,gGAMZuO,GAASxO,KAAOC,IAAV,uHAONwO,GAAezO,KAAOC,IAAV,6EAKZyO,GAA0B1O,KAAOC,IAAV,0HAOvB0O,GAAkB3O,KAAOC,IAAV,+VAkBf2O,GAAY5O,KAAOC,IAAV,oHAOT4O,GAAiB7O,KAAOC,IAAV,oIAQd6O,GAAmB9O,KAAOC,IAAV,mGAMhB8O,GAAc/O,KAAOC,IAAV,4BAEXkB,GAAQnB,KAAOC,IAAV,8HACA,SAAC0D,GAAD,OAAWA,EAAMnC,MAAMC,OAAOC,aAOnCuD,GAAyBjF,KAAOC,IAAV,kJAQb+O,GAzOkB,WAAO,IAC9Btb,EAAY0C,eAAZ1C,QACFyQ,EAAatB,KACb3E,EAAkBD,KAClBgR,EAAiBjM,GAAwB,GACzCkM,EAAiBlM,GAAwB,GACzCmM,EAAiBnM,GAAwB,GACzCzC,EAAkBC,eAExB,OACE,eAACuO,GAAD,UACE,eAAC,KAAD,UACE,eAAC,KAAD,UACE,gBAAC,GAAD,WACE,gBAACD,GAAD,WACE,eAAC,GAAD,UACGpb,GAAWwK,EAAX,sBACQqC,EAAgB,IAAK,8BAD7B,gBAEGA,EAAgB,IAAK,4BAE3B,2BAEF,eAAC2N,GAAD,UACG/J,EAAW1K,KAAI,SAAC4K,EAAQtK,GAAT,OAEd,cADA,CACC4U,GAAD,UACE,eAACF,GAAD,UAAepK,KADKtK,QAK1B,gBAACoU,GAAD,WACE,eAACS,GAAD,UACE,eAACN,GAAD,UACE,eAAC,KAAD,CAAO5H,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,QAG/F,eAACR,GAAD,UACE,eAACP,GAAD,CAAWtI,MAAO,CAAEsJ,WAAY,UAAhC,SACE,eAAC,KAAD,CAAO3I,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,QAG/F,eAACR,GAAD,UACE,eAACP,GAAD,CAAWtI,MAAO,CAAEsJ,WAAY,UAAhC,SACE,eAAC,KAAD,CAAO3I,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,QAG/F,eAACR,GAAD,UACE,eAACP,GAAD,CAAWtI,MAAO,CAAEsJ,WAAY,UAAhC,SACE,eAAC,KAAD,CAAO3I,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,WAIjG,gBAAChB,GAAD,WACE,eAACS,GAAD,UACE,eAACP,GAAD,UACE,eAAC,KAAD,CAAO5H,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,QAG/F,eAACP,GAAD,UACE,eAACR,GAAD,CAAWtI,MAAO,CAAEsJ,WAAY,UAAhC,SACE,eAAC,KAAD,CAAO3I,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,QAG/F,eAACP,GAAD,UACE,eAACR,GAAD,CAAWtI,MAAO,CAAEsJ,WAAY,UAAhC,SACE,eAAC,KAAD,CAAO3I,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,QAG/F,eAACP,GAAD,UACE,eAACR,GAAD,CAAWtI,MAAO,CAAEsJ,WAAY,UAAhC,SACE,eAAC,KAAD,CAAO3I,IAAI,8BAA8BC,IAAI,WAAWoH,MAAO,IAAKD,OAAQ,IAAKsB,YAAU,WAIjG,gBAACZ,GAAD,WACE,gBAACD,GAAD,WACE,eAACG,GAAD,UAA0BnO,EAAgB,IAAK,iCAC/C,eAACmO,GAAD,UACE,kCAASO,SAGb,gBAACV,GAAD,WACE,eAACG,GAAD,UAA0BnO,EAAgB,IAAK,iCAC/C,eAACmO,GAAD,UACE,kCAASQ,SAGb,gBAACX,GAAD,WACE,eAACG,GAAD,UAA0BnO,EAAgB,IAAK,iCAC/C,eAACmO,GAAD,UACE,kCAASS,YAIf,eAAClB,GAAD,CAAMqB,KAAK,6DAA6D3a,OAAO,SAA/E,SACG4L,EAAgB,IAAK,6CClG9BgP,GAAgBvP,KAAOC,IAAV,wHAOboH,GAAgBrH,aAAOoB,KAAPpB,CAAH,iDAIbwP,GAAcxP,aAAOsG,KAAPtG,CAAH,qDAIXyP,GAAazP,aAAOiO,KAAPjO,CAAH,0EAyBD0P,GApBI,WACjB,IAAMnP,EAAkBC,eAExB,OACE,gBAAC+O,GAAD,WACE,eAACC,GAAD,CAAa9I,IAAI,oCAAoCC,IAAI,gBAAgBoH,MAAO,IAAKD,OAAQ,MAC7F,eAAC,GAAD,CAAevM,KAAK,KAAKD,GAAG,KAAKJ,MAAM,YAAvC,SACGX,EAAgB,IAAK,kBAExB,eAAC,KAAD,CAAMS,SAAS,OAAf,SACGT,EACC,IACA,kKAGJ,eAACkP,GAAD,CAAYH,KAAK,6CAAjB,2BC3BAK,GAAQ3P,aAAO4P,KAAP5P,CAAH,gQAQP,qBAAGwB,MAAkBO,aAAaC,MAMlC,qBAAGR,MAAkBO,aAAaG,MAOhC2N,GAA0B7P,KAAOC,IAAV,wEAET,SAAC0D,GAAD,OAAYA,EAAMsD,OAAS,SAAW,oBAiC3C6I,GA9BgB,WAAO,IAC5Bpc,EAAY0C,eAAZ1C,QACA6O,EAAgBD,KAAhBC,YAEF0E,EADWpB,aAAiBtD,GACR,EAE1B,OACE,uCACE,gBAACoN,GAAD,WACE,+BACE,eAAC,GAAD,MAEF,eAACE,GAAD,CAAyB5I,OAAQA,EAAjC,SACIvT,EAGA,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,CAAY0X,aAAcnE,OAJ5B,eAAC,GAAD,SASN,eAAC,GAAD,IAEA,eAAC,GAAD,Q,SC7BS8I,GAXU,uCAAG,WAAO1M,GAAP,iBAAA1P,EAAA,+EAED2E,MAAM,+DAAD,OAAgE+K,IAFpE,cAElB2M,EAFkB,gBAGLA,EAASC,OAHJ,cAGlBC,EAHkB,yBAKjBA,GALiB,wCAOlB,IAAIC,MAAJ,MAPkB,0DAAH,sDCdnBhK,GAAUnG,KAAOC,IAAV,sDAIPmQ,GAAgBpQ,KAAOC,IAAV,qDAIboQ,GAAgBrQ,KAAOC,IAAV,oIAkDJqQ,GA1CiD,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,qBAAsBC,EAAe,EAAfA,SAAe,EAC5Dhb,mBAAS+a,GADmD,mBAC/FlN,EAD+F,KAChFoN,EADgF,OAExEjb,oBAAS,GAF+D,mBAE/Fkb,EAF+F,KAEtFC,EAFsF,KAGhGpQ,EAAkBC,eAgBxB,OACE,gBAAC,GAAD,WACE,eAAC,KAAD,UAAOD,EAAgB,IAAK,4BAC5B,uBAAMiQ,SAjBW,SAACI,GACpBA,EAAIC,iBACJL,EAASnN,IAeP,SACE,gBAAC+M,GAAD,WACE,eAAC,KAAD,CACEzH,MAAOtF,EACPyN,KAAK,SACLC,UAAWL,EACXpI,IAAKiI,EACL9H,SAnBW,SAACmI,GACpB,IAAMjI,EAAQ7K,SAAS8S,EAAIvG,cAAc1B,MAAO,IAIhDgI,EAAWhI,EAAQ4H,GACnBE,EAAiB9H,MAeX,eAAC0H,GAAD,UACE,eAAC,KAAD,CAAQS,KAAK,SAASvP,KAAK,KAAK2E,SAAUwK,EAA1C,SACGnQ,EAAgB,IAAK,uBC9CrByQ,GAJ+C,SAAC,GAAe,IAAbnW,EAAY,EAAZA,MAC/D,OAAO,eAAC,KAAD,CAAMmC,EAAE,OAAR,SAAgBnC,EAAMoW,W,UCAzBlM,GAAc/E,KAAOC,IAAV,wGAQXiR,GAA6C,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAAS1N,EAAY,qDACnG,OACE,gBAAC,KAAD,6BAAUA,GAAV,cACG0N,GACC,eAAC,GAAD,UACE,eAACA,EAAD,MAGJ,gBAAC,KAAD,CAAMC,cAAc,SAApB,UACE,eAAC,KAAD,CAAMtQ,SAAS,OAAOE,MAAM,aAA5B,SACGkQ,IAEH,eAAC,KAAD,CAAS7P,KAAK,KAAd,SAAoB4P,YAM5BD,GAAmBtF,aAAe,CAChCuF,eAAgB,GAChBE,KAAM,kBAAM,0BACZD,SAAU,IAGGF,I,6CAAAA,MCjCT/K,GAAUnG,KAAOC,IAAV,6KAYPsR,GAAmBvR,aAAOwR,KAAPxR,CAAH,+JAsCP6K,GA7BiE,SAAC,GAAqC,IAAnC4G,EAAkC,EAAlCA,aAAcpO,EAAoB,EAApBA,cACzF9C,EAAkBC,eAClBvE,EAAUmH,GAAWC,GACrB0H,EAAgB9O,EAAQlH,OAHqF,EAItF0Q,cAAS,eAAC,GAAD,CAAgBxB,gBAAiBhI,EAASzB,KAAK,SAA9EkL,EAJ4G,oBAOnH,OAFoBtP,eAAZ1C,QAWN,gBAAC,GAAD,WACE,+BACE,eAAC,KAAD,CAAQwS,SAA4B,IAAlB6E,EAAqBlG,QAASa,EAAoBO,WAAS,EAA7E,SACG1F,EAAgB,IAAK,yBAG1B,+BACE,eAACgR,GAAD,CAAkBjC,KAAMmC,EAAxB,SAAuClR,EAAgB,IAAK,0BAd9D,eAAC,GAAD,UACE,eAACgH,GAAA,EAAD,OC1BOmK,GAdW,SAACC,GACzB,IAAKA,EACH,MAAO,GAGT,IAAM3S,EAAO,IAAIT,KAAKoT,GAEhBC,EAAa5S,EAAK6S,eAIxB,MAAO,CAAExa,MAHK2H,EAAKE,cAGH4S,YAFIF,EAAWG,MAAM,KAAKC,OAAO,EAAG,GAAGvN,KAAK,OCJxD0B,GAAUnG,KAAOC,IAAV,6EAkBEgS,GAZG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACJR,GAAkBQ,GAAzCJ,EAD2B,EAC3BA,YAAaza,EADc,EACdA,MAErB,OACE,eAAC,GAAD,UACE,gBAAC,KAAD,CAAM2J,SAAS,OAAf,UACG8Q,EADH,KACkBza,EADlB,gBCFAwV,GAAc7M,KAAOC,IAAV,qIAOXkS,GAAwBnS,aAAOkR,GAAPlR,CAAH,uDACR,SAAC2D,GAAD,OAAWA,EAAMnC,MAAMuC,QAAQ,MA0DnCqO,GAvDmD,SAAC,GAAc,IAAZlC,EAAW,EAAXA,KAC7D3P,EAAkBC,eAGtBiR,EASEvB,EATFuB,aACAY,EAQEnC,EARFmC,cACAV,EAOEzB,EAPFyB,YACAtO,EAME6M,EANF7M,cACAiP,EAKEpC,EALFoC,eACAC,EAIErC,EAJFqC,aACAC,EAGEtC,EAHFsC,aACAC,EAEEvC,EAFFuC,aACAC,EACExC,EADFwC,SAGF,OACGxC,EAAKrV,OACNqV,GACE,uCACE,eAAC,KAAD,UACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAWgC,UAAWP,IACtB,gBAAC,KAAD,CAASpQ,KAAK,KAAKoM,GAAG,OAAtB,oBACUtK,KAEV,eAAC8O,GAAD,CACEhB,eAAc,UAAKmB,EAAe,GAApB,aAA2BA,EAAe,GAA1C,aAAiDA,EAAe,GAAhE,aAAuEA,EAAe,IACpGjB,KAAMsB,KAFR,SAIGpS,EAAgB,IAAK,qBAExB,eAAC,GAAD,CACE4Q,eAAgB5Q,EAAgB,IAAD,UAASmS,EAAS3J,iBAAlB,UAC/BsI,KAAMuB,KAFR,SAIGrS,EAAgB,IAAK,uBAI5B,gBAAC,KAAD,WACE,eAAC,GAAD,CACE8L,mBAAoBqG,EACpBpG,eAAgB+F,EAChBQ,iBAAkBN,EAClBhG,iBAAkBiG,EAClBhG,mBAAoBiG,EACpB3G,UAAQ,IAEV,eAACgH,GAAD,CAAoBrB,aAAcA,EAAcpO,cAAeA,WCxD1D0P,GAJqC,SAAC,GAAqB,IAAnBlY,EAAkB,EAAlBA,MAAOqV,EAAW,EAAXA,KAC5D,OAAO,eAAC,KAAD,UAAOrV,EAAMoW,QAAU,eAAC,GAAD,CAAoBpW,MAAOA,IAAY,eAAC,GAAD,CAAsBqV,KAAMA,OCyBpF8C,GA5BsB,WAAwC,IAAD,EACxCxd,oBAAS,GAD+B,mBACnEyd,EADmE,KACxDC,EADwD,OAElD1d,mBAAS,MAFyC,mBAEnE0a,EAFmE,KAE7DiD,EAF6D,OAGhD3d,mBAAS,MAHuC,mBAGnEqF,EAHmE,KAG5DuY,EAH4D,KAIlE3a,EAA4BgV,qBAAWC,IAAvCjV,wBAqBR,OAnBA9C,qBAAU,WAcJ8C,EAA0B,GAbF,uCAAG,4BAAA9E,EAAA,sEAE3Buf,GAAa,GAFc,SAIHnD,GAAoBtX,GAJjB,OAIrB4a,EAJqB,OAK3BF,EAAQE,GALmB,gDAO3BD,EAAS,EAAD,IAPmB,yBAS3BF,GAAa,GATc,4EAAH,oDAc1BI,KAED,CAAC7a,EAAyB0a,EAASD,EAAcE,IAE7C,CAAEH,YAAW/C,OAAMzX,0BAAyBoC,UC1B/CsL,GAAUnG,KAAOC,IAAV,2EAKPkH,GAAiBnH,aAAOoH,KAAPpH,CAAH,8IA8ELuT,GAvEgB,WAAO,IAAD,EACT/d,mBAAS,CACjC6d,UAAW,KACXxY,MAAO,CAAEoW,QAAS,KAAMH,KAAM,MAC9B0C,eAAe,EACfP,WAAW,IALsB,mBAC5B7U,EAD4B,KACrBqV,EADqB,OAO2BT,KAAhDU,EAPqB,EAO3BxD,KAA0BzX,EAPC,EAODA,wBAC5B8H,EAAkBC,eAChB6S,EAA+CjV,EAA/CiV,UAAWxY,EAAoCuD,EAApCvD,MAAO2Y,EAA6BpV,EAA7BoV,cAAeP,EAAc7U,EAAd6U,UAEzCtd,qBAAU,WACJ+d,GACFD,GAAS,SAACE,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCV,WAAW,EAAOO,eAAe,EAAMH,UAAWK,SAE5F,CAACA,EAAoBD,IAExB,IAAMG,EAAY,uCAAG,WAAOvQ,GAAP,SAAA1P,EAAA,sDACnB8f,GAAS,SAACE,GAAD,oBAAC,gBACLA,GADI,IAEPV,WAAW,OAGblD,GAAoB1M,GACjBwQ,MAAK,SAAC3D,GACDA,EAAKrV,MACP4Y,GAAS,SAACE,GAAD,oBAAC,gBACLA,GADI,IAEP9Y,MAAO,CACLoW,QAAS1Q,EAAgB,KAAM,kDAC/BuQ,KAAM,gBAERmC,WAAW,EACXO,eAAe,OAGjBC,GAAS,SAACE,GAAD,oBAAC,gBACLA,GADI,IAEP9Y,MAAO,CAAEoW,QAAS,KAAMH,KAAM,MAC9BuC,UAAWnD,EACX+C,WAAW,EACXO,eAAe,UAIpBM,OAAM,WACLL,GAAS,SAACE,GAAD,oBAAC,gBACLA,GADI,IAEP9Y,MAAO,CAAEoW,QAAS1Q,EAAgB,KAAM,uBAAwBuQ,KAAM,OACtEmC,WAAW,EACXO,eAAe,UAjCF,2CAAH,sDAsClB,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAqBjD,qBAAsB9X,EAAyB+X,SAAUoD,KAC5EJ,GAAiBP,EACjB,eAAC,KAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,QAIJ,eAAC,GAAD,CAAepY,MAAOA,EAAOqV,KAAMmD,QCjFrCU,GAAOC,gBAAK,kBAAM,yDAElBC,GAAejU,KAAOC,IAAV,qIAgHHiU,GAxGgB,WAAO,IAAD,EACGzG,qBAAWC,IAAzC/U,EAD2B,EAC3BA,YAAaD,EADc,EACdA,aACfyb,EAAe,SAACC,GACpB,OAAOzb,EACJc,KAAI,SAAC4a,GACJ,OAAOA,EAAUD,MAElBE,WAGCC,EAAa,SAAC,GAClB,MAAO,CACLC,YAF8B,EAAZtT,MAGlBuT,MAAM,EACNC,YAAa,EACbC,YAAa,EACbC,eAAgB,KAIdC,EAAY,CAChBC,OAAQX,EAAa,iBACrBY,SAAU,CAAC,cAEPC,MAAO,YACP9E,KAAMiE,EAAa,YACnBc,QAAS,eACNV,EAAW,CAAErT,MAAO,aALjB,cAQN8T,MAAO,SACP9E,KAAMiE,EAAa,UACnBc,QAAS,iBACNV,EAAW,CAAErT,MAAO,eAKvBgU,EAAa,SAAC,GAClB,MAAO,CACLC,eAAgB,QAChBC,UAAW,CAAEC,SAAS,GACtBC,MAAO,CACLC,WAAY,oBACZC,UANwC,EAAxBtU,MAOhBF,SAAU,GACVyU,WARwC,EAAjBA,WASvBC,YAAa,EACbC,aAAa,EACbC,gBAAiB,GACjBC,aAAc,SAAClN,GACb,OAAOA,EAAMI,qBAMfjV,EAAU,CACdgiB,OAAQ,CAAET,SAAS,GACnBU,OAAQ,CACNC,MAAO,CAAC,cAEJlF,KAAM,SACNuE,SAAS,EACTY,SAAU,OACVza,GAAI,eACD0Z,EAAW,CAAEhU,MAAO,UAAWuU,WAAY,OAN3C,cASH3E,KAAM,SACNuE,SAAS,EACTY,SAAU,QACVza,GAAI,iBACD0Z,EAAW,CAAEhU,MAAO,UAAWuU,WAAY,QAGlDS,MAAO,CAAC,gBAEDhB,EAAW,CAAEhU,MAAO,UAAWuU,WAAY,QAMtD,OACE,uCACG/c,GACC,eAACub,GAAD,UACE,eAAC,KAAD,qCAGFvb,GAAgBC,EAAY5D,OAAS,EACrC,eAAC,WAAD,CAAUohB,SAAU,8CAApB,SACE,eAACpC,GAAD,CAAM7D,KAAM2E,EAAW/gB,QAASA,EAASgd,KAAK,WAGhD,eAACmD,GAAD,UACE,eAAC,GAAD,UC5GJ9N,GAAUnG,KAAOC,IAAV,wEAKPmW,GAAapW,KAAOC,IAAV,+FAMVoW,GAASrW,KAAOC,IAAV,uIAIU,gBAAGqW,EAAH,EAAGA,WAAH,SAAe9U,MAAkBC,OAAO6U,EAAa,aAAe,cAqB3EC,GAjBA,WACb,IAAMhW,EAAkBC,eAExB,OACE,gBAAC,GAAD,WACE,gBAAC4V,GAAD,WACE,eAACC,GAAD,CAAQC,YAAU,IAClB,eAAC,KAAD,UAAO/V,EAAgB,IAAK,kBAE9B,gBAAC6V,GAAD,WACE,eAACC,GAAD,IACA,eAAC,KAAD,UAAO9V,EAAgB,IAAK,mBCfrBiW,GAdwB,WACrC,IAAMjW,EAAkBC,eAExB,OACE,eAAC,KAAD,UACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAASe,KAAK,KAAd,SAAoBhB,EAAgB,IAAK,aACzC,eAAC,GAAD,IACA,eAAC,GAAD,UCRFoP,GAAQ3P,aAAO4P,KAAP5P,CAAH,gQAQP,qBAAGwB,MAAkBO,aAAaC,MAMlC,qBAAGR,MAAkBO,aAAaG,MAOhC2N,GAA0B7P,KAAOC,IAAV,2EAKvBwW,GAAoBzW,KAAOC,IAAV,iGAoBRyW,GAdiB,WAC9B,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAACD,GAAD,UACE,sBAAK/P,IAAI,oCAAoCC,IAAI,2BC/BrDR,GAAUnG,KAAOC,IAAV,mJAkEE0W,GA1DW,WACxB,IAAMhf,EAAkBC,eAChBlE,EAAY0C,eAAZ1C,QACF6M,EAAkBC,eAHM,EAIQhL,mBAAS,GAJjB,mBAIvBohB,EAJuB,KAIVC,EAJU,OAKQrhB,mBAAS,IALjB,mBAKvBmD,EALuB,KAKVme,EALU,OAMUthB,oBAAS,GANnB,mBAMvBkD,EANuB,KAMTqe,EANS,OAO0BvhB,mBAAS,GAPnC,mBAOvBgY,EAPuB,KAODwJ,EAPC,OAQgCxhB,mBAAS,GARzC,mBAQvBiD,EARuB,KAQEwe,EARF,KAU9BthB,qBAAU,WACR2C,MAAM,kDACHub,MAAK,SAAC7D,GAAD,OAAcA,EAASC,UAC5B4D,MAAK,SAAC3D,GAAD,OAAU4G,EAAe5G,MAC9B4D,OAAM,WACLiD,GAAgB,QAEnB,IAEHphB,qBAAU,WASJjC,GAAWiE,GARa,uCAAG,8BAAAhE,EAAA,sEACT2J,GAAqB3F,GADZ,OACvBoC,EADuB,OAEvBmd,EAAwBnd,EAAQ,EAEtCid,EAAwBjd,GACxBkd,EAA2BC,GALE,2CAAH,oDAS1BC,KAED,CAACzjB,EAASiE,IAMb,OACE,uCACE,eAAC,GAAD,IACA,gBAACyf,GAAA,EAAD,WACE,eAAC,GAAD,UACE,gBAAC,KAAD,CAAYR,YAAaA,EAAa/R,QAT1B,SAAC9K,GACnB8c,EAAe9c,IAQmDwH,KAAK,KAAKqD,QAAQ,SAA9E,UACE,eAAC,KAAD,UAAiBrE,EAAgB,IAAK,eACtC,eAAC,KAAD,UAAiBA,EAAgB,IAAK,qBAG1C,eAAC8W,GAAD,IACA,eAAC3J,GAAuB4J,SAAxB,CACE3O,MAAO,CAAEjQ,eAAcC,cAAaF,0BAAyB+U,wBAD/D,SAGmB,IAAhBoJ,EAAoB,eAAC,GAAD,IAAmB,eAAC,GAAD","file":"static/js/7.08325e32.chunk.js","sourcesContent":["import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { LOTTERY_TICKET_PRICE } from 'config'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIndex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIndex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\r\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"invertedContrast\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(708, 'The LION Lottery')}</Title>\r\n          <Blurb>{TranslateString(710, 'Buy tickets with LION')}</Blurb>\r\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from 'lionuikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(660, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n            LION\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(1056, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'lionuikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import { useCallback, useState } from 'react'\r\nimport { useLotteryApprove } from './useApprove'\r\n\r\nexport const useApproval = (onPresentApprove: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove } = useLotteryApprove()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport default useApproval\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'lionuikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from 'lionuikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\r\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * LOTTERY_TICKET_PRICE\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"LION\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} LION`, { num: LOTTERY_TICKET_PRICE })}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your LION cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} LION`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          fullWidth\r\n          disabled={\r\n            pendingTx ||\r\n            parseInt(val) > Number(maxTickets) ||\r\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\r\n            parseInt(val) < 1\r\n          }\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from 'lionuikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your LION will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button fullWidth onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useApproval } from 'hooks/useApproval'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"LION\" />)\r\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(494, 'Approve LION')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(870, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(724, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'lionuikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from 'lionuikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  oneTicketMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(756, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(754, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(752, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem>\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from 'lionuikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\r\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\r\n                </Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(722, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} LION</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from 'lionuikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(632, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend LION to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from 'lionuikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match1Ticket: number | null\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n  poolMatch1: number | null\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(744, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from 'lionuikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from 'lionuikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'lionuikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match1Ticket,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} LION`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            oneTicketMatches={match1Ticket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from 'lionuikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'lionuikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'lionuikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(750, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from 'lionuikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from 'lionuikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from 'lionuikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}